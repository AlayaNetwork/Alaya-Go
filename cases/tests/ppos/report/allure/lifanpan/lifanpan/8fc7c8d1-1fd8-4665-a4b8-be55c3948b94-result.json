{"name": "test_ZB_NP_68", "status": "failed", "statusDetails": {"message": "AssertionError: assert 17 == 0\n  -17\n  +0", "trace": "new_genesis_env = <environment.env.TestEnvironment object at 0x00000269F5964CC0>\nclients_consensus = [<tests.lib.client.Client object at 0x00000269F6C2F320>, <tests.lib.client.Client object at 0x00000269F6FB3C18>, <tests.lib.client.Client object at 0x00000269F6F98278>, <tests.lib.client.Client object at 0x00000269F553A278>]\n\n    def test_ZB_NP_68(new_genesis_env, clients_consensus):\n        \"\"\"\n        当前触发共识轮230块前出块，不零出块处罚\n        \"\"\"\n        update_zero_produce(new_genesis_env, 2, 2)\n        economic = clients_consensus[0].economic\n        first_node = economic.env.get_consensus_node_by_index(0)\n        log.info(\"first_node id :{}\".format(first_node.node_id))\n        second_node = economic.env.get_consensus_node_by_index(1)\n        log.info(\"first_node id :{}\".format(second_node.node_id))\n    \n        # Start execution use case\n        current_validator = get_pledge_list(first_node.ppos.getValidatorList)\n        log.info(\"current validator: {}\".format(current_validator))\n        time.sleep(2)\n        log.info(\"Current block height: {}\".format(first_node.eth.blockNumber))\n        second_node.stop()\n        economic.wait_consensus_blocknum(first_node, 1)\n        log.info(\"Current block height: {}\".format(first_node.eth.blockNumber))\n        wait_slashing_list = first_node.debug.getWaitSlashingNodeList()\n        log.info(\"Zero block record table：{}\".format(wait_slashing_list))\n        assert get_slash_count(wait_slashing_list, second_node.node_id) == to_int(1)\n        assert_not_slashing(first_node.ppos.getCandidateInfo(second_node.node_id), 1500000000000000000000000)\n        second_node.start(False)\n        wait_block_number(first_node, 111)\n        wait_slashing_list = first_node.debug.getWaitSlashingNodeList()\n        assert get_slash_count(wait_slashing_list, second_node.node_id) == 0\n>       assert_not_slashing(first_node.ppos.getCandidateInfo(second_node.node_id), 1500000000000000000000000)\n\nclients_consensus = [<tests.lib.client.Client object at 0x00000269F6C2F320>, <tests.lib.client.Client object at 0x00000269F6FB3C18>, <tests.lib.client.Client object at 0x00000269F6F98278>, <tests.lib.client.Client object at 0x00000269F553A278>]\ncurrent_validator = ['488fb1c783f7ac6a20d320e8442ddebe8cf983f5eda7effd00b919afdcf31dcd10e6b2bcee158245fef3a587e0248bea8cf8f6905af833623d03...b2046a77afb48a13f875c17d674421eda9c5345c32d9378490326d628e9f9b60392fcf7832ba82c9ebf5953573d6f93878c24f77e9cb53ee59fec']\neconomic   = <tests.lib.economic.Economic object at 0x00000269F6C2F1D0>\nfirst_node = <environment.node.Node object at 0x00000269F51BE9B0>\nnew_genesis_env = <environment.env.TestEnvironment object at 0x00000269F5964CC0>\nsecond_node = <environment.node.Node object at 0x00000269F51BEDD8>\nwait_slashing_list = []\n\ntests\\ppos\\test_Zero_out_penalty.py:1687: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\ncandidate_info = {'Code': 0, 'Ret': {'BenefitAddress': '0x1000000000000000000000000000000000000003', 'BlsPubKey': 'b823674b30877e4cc163...564085b7edf64ccdea9a944019f58951cd1616021c0de07735cafde6021e79314', 'DelegateEpoch': 0, 'DelegateRewardTotal': 0, ...}}\nstaking_amount = 1500000000000000000000000\n\n    def assert_not_slashing(candidate_info, staking_amount):\n        ret = candidate_info[\"Ret\"]\n>       assert ret[\"Status\"] == 0\nE       assert 17 == 0\nE         -17\nE         +0\n\ncandidate_info = {'Code': 0, 'Ret': {'BenefitAddress': '0x1000000000000000000000000000000000000003', 'BlsPubKey': 'b823674b30877e4cc163...564085b7edf64ccdea9a944019f58951cd1616021c0de07735cafde6021e79314', 'DelegateEpoch': 0, 'DelegateRewardTotal': 0, ...}}\nret        = {'BenefitAddress': '0x1000000000000000000000000000000000000003', 'BlsPubKey': 'b823674b30877e4cc163448e3852d367c4bf79c...b564085b7edf64ccdea9a944019f58951cd1616021c0de07735cafde6021e79314', 'DelegateEpoch': 0, 'DelegateRewardTotal': 0, ...}\nstaking_amount = 1500000000000000000000000\n\ntests\\ppos\\test_Zero_out_penalty.py:31: AssertionError"}, "description": "\n    当前触发共识轮230块前出块，不零出块处罚\n    ", "attachments": [{"name": "env log", "source": "517614f5-3c80-46e1-b1a3-398ac3a40f7c-attachment.uri", "type": "text/uri-list"}, {"name": "env status", "source": "a2390c40-d4b9-4f78-9412-2a9606a883d4-attachment.txt", "type": "text/plain"}, {"name": "log", "source": "c0815cea-dea3-4122-a645-6fbb25625fee-attachment.txt", "type": "text/plain"}], "start": 1586616688934, "stop": 1586616781094, "uuid": "def3af19-a8b8-4ac7-80d1-c526b71db284", "historyId": "5477d970239b8eafa2ff4eaa58203848", "testCaseId": "ef151825cf9744208305be61d5685db7", "fullName": "tests.ppos.test_Zero_out_penalty#test_ZB_NP_68", "labels": [{"name": "parentSuite", "value": "tests.ppos"}, {"name": "suite", "value": "test_Zero_out_penalty"}, {"name": "host", "value": "hietel"}, {"name": "thread", "value": "25124-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.ppos.test_Zero_out_penalty"}]}