{"name": "test_AL_BI_002", "status": "failed", "statusDetails": {"message": "AssertionError: ErrMsg: incentive_pool_balance: 262653936756026670780748660\nassert 262653936756026670780748660 == 262434839378018649390374330\n  -262653936756026670780748660\n  +262434839378018649390374330", "trace": "new_genesis_env = <environment.env.TestEnvironment object at 0x00000269F5964CC0>, staking_cfg = <tests.lib.config.StakingConfig object at 0x00000269F75BA908>\n\n    @pytest.mark.P1\n    def test_AL_BI_002(new_genesis_env, staking_cfg):\n        \"\"\"\n        节点出块率为0被处罚，激励池金额增加\n        :param new_genesis_env:\n        :param staking_cfg:\n        :return:\n        \"\"\"\n        # Change configuration parameters\n        genesis = from_dict(data_class=Genesis, data=new_genesis_env.genesis_config)\n        genesis.economicModel.slashing.slashBlocksReward = 5\n        new_file = new_genesis_env.cfg.env_tmp + \"/genesis.json\"\n        genesis.to_file(new_file)\n        new_genesis_env.deploy_all(new_file)\n        client_noc_list_obj = get_clients_noconsensus(new_genesis_env, staking_cfg)\n        client1 = client_noc_list_obj[0]\n        client2 = client_noc_list_obj[1]\n        economic = client1.economic\n        node = client1.node\n        log.info(\"nodeid: {}\".format(node.node_id))\n        # create account\n        address, _ = economic.account.generate_account(node.web3, von_amount(economic.create_staking_limit, 2))\n        # create staking\n        result = client1.staking.create_staking(0, address, address)\n        assert_code(result, 0)\n        # Waiting for a settlement round\n        client2.economic.wait_settlement_blocknum(client2.node)\n        # view incentive account\n        incentive_pool_balance = node.eth.getBalance(EconomicConfig.INCENTIVEPOOL_ADDRESS)\n        log.info(\"incentive_pool_balance: {}\".format(incentive_pool_balance))\n        # view block_reward\n        block_reward, staking_reward = economic.get_current_year_reward(node)\n        log.info(\"block_reward: {} staking_reward: {}\".format(block_reward, staking_reward))\n        # stop node\n        node.stop()\n        # Waiting for 2 consensus round\n        client2.economic.wait_consensus_blocknum(client2.node, 3)\n        # view verifier list\n        verifier_list = client2.ppos.getVerifierList()\n        log.info(\"verifier_list: {}\".format(verifier_list))\n        result = client2.ppos.getCandidateInfo(client1.node.node_id)\n        log.info(\"CandidateInfo:{}\".format(result))\n        slash_blocks = get_governable_parameter_value(client2, 'slashBlocksReward')\n        log.info(\"slash_blocks\".format(slash_blocks))\n        # Get the penalty amount\n        penalty_amount = int(Decimal(str(block_reward)) * Decimal(str(slash_blocks)))\n        log.info(\"penalty_amount: {}\".format(penalty_amount))\n        # view incentive account again\n        incentive_pool_balance1 = client2.node.eth.getBalance(EconomicConfig.INCENTIVEPOOL_ADDRESS)\n        log.info(\"incentive_pool_balance1: {}\".format(incentive_pool_balance1))\n>       assert incentive_pool_balance1 == incentive_pool_balance + penalty_amount, \"ErrMsg: incentive_pool_balance: {}\".format(\n            incentive_pool_balance1)\nE       AssertionError: ErrMsg: incentive_pool_balance: 262653936756026670780748660\nE       assert 262653936756026670780748660 == 262434839378018649390374330\nE         -262653936756026670780748660\nE         +262434839378018649390374330\n\n_          = '21d45931dcc32f8ad3d48299ef38db9abf122423af6cdbb2ecda23ff50db9915'\naddress    = '0x24012e114fb2c38B596438E1a3230996Fa183AC3'\nblock_reward = 43819475601604278074866\nclient1    = <tests.lib.client.Client object at 0x00000269F6EE54A8>\nclient2    = <tests.lib.client.Client object at 0x00000269F6F32A90>\nclient_noc_list_obj = [<tests.lib.client.Client object at 0x00000269F6EE54A8>, <tests.lib.client.Client object at 0x00000269F6F32A90>, <tests.lib.client.Client object at 0x00000269F6F5A6D8>, <tests.lib.client.Client object at 0x00000269F6C2F080>]\neconomic   = <tests.lib.economic.Economic object at 0x00000269F5302A58>\ngenesis    = Genesis(config=Config(chainId=100, eip155Block=3, cbft=Cbft(initialNodes=[{'node': 'enode://488fb1c783f7ac6a20d320e844...': '0'}}, number='0x0', gasUsed='0x0', parentHash='0x0000000000000000000000000000000000000000000000000000000000000000')\nincentive_pool_balance = 262215742000010628000000000\nincentive_pool_balance1 = 262653936756026670780748660\nnew_file   = 'D:\\\\GO\\\\src\\\\github.com\\\\PlatONnetwork\\\\PlatON-Go\\\\cases\\\\deploy\\\\tmp\\\\lifapan\\\\env/genesis.json'\nnew_genesis_env = <environment.env.TestEnvironment object at 0x00000269F5964CC0>\nnode       = <environment.node.Node object at 0x00000269F589DCC0>\npenalty_amount = 219097378008021390374330\nresult     = {'Code': 0, 'Ret': {'BenefitAddress': '0x24012e114fb2c38b596438e1a3230996fa183ac3', 'BlsPubKey': '6b17b62a0ead315541f2...e216b0ef86da62f2370f303507e60c9d830db271208733a88e85796fc7a050006', 'DelegateEpoch': 0, 'DelegateRewardTotal': 0, ...}}\nslash_blocks = '5'\nstaking_cfg = <tests.lib.config.StakingConfig object at 0x00000269F75BA908>\nstaking_reward = 1402223219251336898395722\nverifier_list = {'Code': 0, 'Ret': [{'BenefitAddress': '0x1000000000000000000000000000000000000003', 'BlsPubKey': 'fa340928f6edfb9f4c3...b96aa54009ffa655cea68ae81f44515483d9f5a939d31a9e0d34bd02', 'DelegateRewardTotal': '0x0', 'DelegateTotal': '0x0', ...}]}\n\ntests\\ppos\\test_token_init.py:666: AssertionError"}, "description": "\n    节点出块率为0被处罚，激励池金额增加\n    :param new_genesis_env:\n    :param staking_cfg:\n    :return:\n    ", "attachments": [{"name": "env log", "source": "45961db3-7c91-4328-8536-0e625f50f6e6-attachment.uri", "type": "text/uri-list"}, {"name": "env status", "source": "d23c0fdc-5fc7-438f-a2d3-26e7733cd5a8-attachment.txt", "type": "text/plain"}, {"name": "log", "source": "38ae809a-c2b3-4019-a303-1c2797314e78-attachment.txt", "type": "text/plain"}], "start": 1586655130091, "stop": 1586655348504, "uuid": "4d934c60-de60-46eb-90c1-825ea89091da", "historyId": "fe54d65b33591150042ab8450e2c7f14", "testCaseId": "290a53fccc68c626acfee5cc9d895913", "fullName": "tests.ppos.test_token_init#test_AL_BI_002", "labels": [{"name": "tag", "value": "P1"}, {"name": "parentSuite", "value": "tests.ppos"}, {"name": "suite", "value": "test_token_init"}, {"name": "host", "value": "hietel"}, {"name": "thread", "value": "25124-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.ppos.test_token_init"}]}