{"name": "test_VP_GPFV_016", "status": "failed", "statusDetails": {"message": "AssertionError: ErrMsg:Pledge RestrictingPlan 0\nassert 0 == 309026219919786096256700\n  -0\n  +309026219919786096256700", "trace": "new_genesis_env = <environment.env.TestEnvironment object at 0x00000269F5964CC0>\nclients_noconsensus = [<tests.lib.client.Client object at 0x00000269F6F95E48>, <tests.lib.client.Client object at 0x00000269F6BFA2B0>, <tests.lib.client.Client object at 0x00000269F5A450F0>, <tests.lib.client.Client object at 0x00000269F52EB9B0>]\n\n    @pytest.mark.P2\n    def test_VP_GPFV_016(new_genesis_env, clients_noconsensus):\n        \"\"\"\n        低出块率被最高处罚金大于自由处罚金（自由金额质押）\n        :param new_genesis_env:\n        :return:\n        \"\"\"\n        # Change configuration parameters\n        genesis = from_dict(data_class=Genesis, data=new_genesis_env.genesis_config)\n        genesis.economicModel.slashing.slashBlocksReward = 50\n        new_file = new_genesis_env.cfg.env_tmp + \"/genesis.json\"\n        genesis.to_file(new_file)\n        new_genesis_env.deploy_all(new_file)\n    \n        client1 = clients_noconsensus[0]\n        log.info(\"Current connection node1: {}\".format(client1.node.node_mark))\n        client2 = clients_noconsensus[1]\n        log.info(\"Current connection node2: {}\".format(client2.node.node_mark))\n        economic = client1.economic\n        node = client1.node\n        # create account\n        address, _ = economic.account.generate_account(node.web3, von_amount(economic.create_staking_limit, 4))\n        # create Restricting Plan\n        amount = economic.create_staking_limit\n        plan = [{'Epoch': 1, 'Amount': amount}]\n        result = client1.restricting.createRestrictingPlan(address, plan, address)\n        assert_code(result, 0)\n        # Get governable parameters\n        slash_blocks = get_governable_parameter_value(client1, 'slashBlocksReward')\n        # create staking\n        staking_amount = von_amount(economic.create_staking_limit, 2)\n        result = client1.staking.create_staking(0, address, address, amount=staking_amount)\n        assert_code(result, 0)\n        # increase staking\n        increase_amount = von_amount(economic.create_staking_limit, 0.5)\n        result = client1.staking.increase_staking(1, address, amount=increase_amount)\n        assert_code(result, 0)\n        # Wait for the settlement round to end\n        economic.wait_settlement_blocknum(node)\n        # view Consensus Amount of pledge\n        candidate_info = client1.ppos.getCandidateInfo(node.node_id)\n        log.info(\"Pledge node information: {}\".format(candidate_info))\n        # view block_reward\n        block_reward, staking_reward = client1.economic.get_current_year_reward(node)\n        log.info(\"block_reward: {} staking_reward: {}\".format(block_reward, staking_reward))\n        pledge_amount1 = candidate_info['Ret']['Released']\n        log.info(\"Current block height: {}\".format(client1.node.eth.blockNumber))\n        # stop node\n        client1.node.stop()\n        # Waiting for a settlement round\n        client2.economic.wait_consensus_blocknum(client2.node, 4)\n        log.info(\"Current block height: {}\".format(client2.node.eth.blockNumber))\n        # view verifier list\n        verifier_list = client2.ppos.getVerifierList()\n        log.info(\"verifier_list: {}\".format(verifier_list))\n        candidate_info = client2.ppos.getCandidateInfo(client1.node.node_id)\n        log.info(\"Pledge node information： {}\".format(candidate_info))\n        info = candidate_info['Ret']\n        pledge_amount2 = info['Released']\n        pledge_amount3 = info['RestrictingPlan']\n        punishment_amonut = int(Decimal(str(block_reward)) * Decimal(str(slash_blocks)))\n        log.info(\"punishment_amonut: {}\".format(punishment_amonut))\n        assert (pledge_amount2 == 0), \"ErrMsg:Pledge Released {}\".format(pledge_amount2)\n>       assert (pledge_amount3 == increase_amount - (punishment_amonut - pledge_amount1)) , \"ErrMsg:Pledge RestrictingPlan {}\".format(pledge_amount3)\nE       AssertionError: ErrMsg:Pledge RestrictingPlan 0\nE       assert 0 == 309026219919786096256700\nE         -0\nE         +309026219919786096256700\n\n_          = '8fac31cbf741b6445c1cdbd7eb2770670431912353534a35214947b06a6a030b'\naddress    = '0xaD0A9C9907d6eBEa40Cc262955DeD222e2C986AD'\namount     = 1000000000000000000000000\nblock_reward = 43819475601604278074866\ncandidate_info = {'Code': 0, 'Ret': {'BenefitAddress': '0xad0a9c9907d6ebea40cc262955ded222e2c986ad', 'BlsPubKey': '6b17b62a0ead315541f2...e216b0ef86da62f2370f303507e60c9d830db271208733a88e85796fc7a050006', 'DelegateEpoch': 0, 'DelegateRewardTotal': 0, ...}}\nclient1    = <tests.lib.client.Client object at 0x00000269F6F95E48>\nclient2    = <tests.lib.client.Client object at 0x00000269F6BFA2B0>\nclients_noconsensus = [<tests.lib.client.Client object at 0x00000269F6F95E48>, <tests.lib.client.Client object at 0x00000269F6BFA2B0>, <tests.lib.client.Client object at 0x00000269F5A450F0>, <tests.lib.client.Client object at 0x00000269F52EB9B0>]\neconomic   = <tests.lib.economic.Economic object at 0x00000269F6F950F0>\ngenesis    = Genesis(config=Config(chainId=100, eip155Block=3, cbft=Cbft(initialNodes=[{'node': 'enode://488fb1c783f7ac6a20d320e844...': '0'}}, number='0x0', gasUsed='0x0', parentHash='0x0000000000000000000000000000000000000000000000000000000000000000')\nincrease_amount = 500000000000000000000000\ninfo       = {'BenefitAddress': '0xad0a9c9907d6ebea40cc262955ded222e2c986ad', 'BlsPubKey': '6b17b62a0ead315541f2d1094433e4413ca5c5c...ee216b0ef86da62f2370f303507e60c9d830db271208733a88e85796fc7a050006', 'DelegateEpoch': 0, 'DelegateRewardTotal': 0, ...}\nnew_file   = 'D:\\\\GO\\\\src\\\\github.com\\\\PlatONnetwork\\\\PlatON-Go\\\\cases\\\\deploy\\\\tmp\\\\lifapan\\\\env/genesis.json'\nnew_genesis_env = <environment.env.TestEnvironment object at 0x00000269F5964CC0>\nnode       = <environment.node.Node object at 0x00000269F589DCC0>\nplan       = [{'Amount': 1000000000000000000000000, 'Epoch': 1}]\npledge_amount1 = 2000000000000000000000000\npledge_amount2 = 0\npledge_amount3 = 0\npunishment_amonut = 2190973780080213903743300\nresult     = 0\nslash_blocks = '50'\nstaking_amount = 2000000000000000000000000\nstaking_reward = 1402223219251336898395722\nverifier_list = {'Code': 0, 'Ret': [{'BenefitAddress': '0x1000000000000000000000000000000000000003', 'BlsPubKey': 'fa340928f6edfb9f4c3...b96aa54009ffa655cea68ae81f44515483d9f5a939d31a9e0d34bd02', 'DelegateRewardTotal': '0x0', 'DelegateTotal': '0x0', ...}]}\n\ntests\\ppos\\test_general_punishment.py:746: AssertionError"}, "description": "\n    低出块率被最高处罚金大于自由处罚金（自由金额质押）\n    :param new_genesis_env:\n    :return:\n    ", "attachments": [{"name": "env log", "source": "e0cf3853-069f-4951-860a-8ab234c52730-attachment.uri", "type": "text/uri-list"}, {"name": "env status", "source": "4866be1c-2709-4120-9498-31bb6e90e0b4-attachment.txt", "type": "text/plain"}, {"name": "log", "source": "c0f51836-b193-4c27-b2cf-e78b2c54d058-attachment.txt", "type": "text/plain"}], "start": 1586632688259, "stop": 1586632931546, "uuid": "3c1b40bb-164d-46e3-8f59-eaaf7f208a92", "historyId": "6127e0d0e65e42d3575255d3f0d3194a", "testCaseId": "b0fa1067da73cda0cceab8254c73a1b6", "fullName": "tests.ppos.test_general_punishment#test_VP_GPFV_016", "labels": [{"name": "tag", "value": "P2"}, {"name": "parentSuite", "value": "tests.ppos"}, {"name": "suite", "value": "test_general_punishment"}, {"name": "host", "value": "hietel"}, {"name": "thread", "value": "25124-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.ppos.test_general_punishment"}]}