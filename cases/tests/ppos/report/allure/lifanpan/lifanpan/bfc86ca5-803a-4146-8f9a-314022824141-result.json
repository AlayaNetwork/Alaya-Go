{"name": "test_VP_GPFV_017", "status": "failed", "statusDetails": {"message": "AssertionError: ErrMsg:Pledge RestrictingPlan 185415731951871657754020\nassert 185415731951871657754020 == 842707865975935828877010\n  -185415731951871657754020\n  +842707865975935828877010", "trace": "new_genesis_env = <environment.env.TestEnvironment object at 0x00000269F5964CC0>\nclients_noconsensus = [<tests.lib.client.Client object at 0x00000269F5A58208>, <tests.lib.client.Client object at 0x00000269F6F3DC50>, <tests.lib.client.Client object at 0x00000269F6CA2FD0>, <tests.lib.client.Client object at 0x00000269F52B12B0>]\n\n    @pytest.mark.P2\n    def test_VP_GPFV_017(new_genesis_env, clients_noconsensus):\n        \"\"\"\n        低出块率被最高处罚金低于质押金额（锁仓金额质押）\n        :param new_genesis_env:\n        :return:\n        \"\"\"\n        # Change configuration parameters\n        genesis = from_dict(data_class=Genesis, data=new_genesis_env.genesis_config)\n        genesis.economicModel.slashing.slashBlocksReward = 15\n        new_file = new_genesis_env.cfg.env_tmp + \"/genesis.json\"\n        genesis.to_file(new_file)\n        new_genesis_env.deploy_all(new_file)\n    \n        client1 = clients_noconsensus[0]\n        log.info(\"Current connection node1: {}\".format(client1.node.node_mark))\n        client2 = clients_noconsensus[1]\n        log.info(\"Current connection node2: {}\".format(client2.node.node_mark))\n        economic = client1.economic\n        node = client1.node\n        # create account\n        address, _ = economic.account.generate_account(node.web3, von_amount(economic.create_staking_limit, 3))\n        # create Restricting Plan\n        amount = economic.create_staking_limit\n        plan = [{'Epoch': 1, 'Amount': amount}]\n        result = client1.restricting.createRestrictingPlan(address, plan, address)\n        assert_code(result, 0)\n        # create staking\n        result = client1.staking.create_staking(1, address, address)\n        assert_code(result, 0)\n        # increase staking\n        increase_amount = von_amount(economic.create_staking_limit, 0.5)\n        result = client1.staking.increase_staking(0, address, amount=increase_amount)\n        assert_code(result, 0)\n        # Wait for the settlement round to end\n        economic.wait_settlement_blocknum(node)\n        # get pledge amount1 and block reward\n        pledge_amount1, block_reward, slash_blocks = get_out_block_penalty_parameters(client1, node, 'Released')\n        log.info(\"Current block height: {}\".format(client1.node.eth.blockNumber))\n        # stop node\n        client1.node.stop()\n        # Waiting for a settlement round\n        client2.economic.wait_consensus_blocknum(client2.node, 3)\n        log.info(\"Current block height: {}\".format(client2.node.eth.blockNumber))\n        # view verifier list\n        verifier_list = client2.ppos.getVerifierList()\n        log.info(\"verifier_list: {}\".format(verifier_list))\n        candidate_info = client2.ppos.getCandidateInfo(client1.node.node_id)\n        log.info(\"Pledge node information： {}\".format(candidate_info))\n        info = candidate_info['Ret']\n        pledge_amount2 = info['Released']\n        pledge_amount3 = info['RestrictingPlan']\n        punishment_amonut = int(Decimal(str(block_reward)) * Decimal(str(slash_blocks)))\n        log.info(\"punishment_amonut: {}\".format(punishment_amonut))\n        assert pledge_amount2 == 0, \"ErrMsg:Pledge Released {}\".format(pledge_amount2)\n>       assert pledge_amount3 == economic.create_staking_limit - (punishment_amonut - increase_amount), \"ErrMsg:Pledge RestrictingPlan {}\".format(pledge_amount3)\nE       AssertionError: ErrMsg:Pledge RestrictingPlan 185415731951871657754020\nE       assert 185415731951871657754020 == 842707865975935828877010\nE         -185415731951871657754020\nE         +842707865975935828877010\n\n_          = '7c95e6679923fd0b33029dce9f394e406b25cbf02495d9ce39ebf5af14fd893f'\naddress    = '0x3B3519cB72f363Bf2b394C0BAB47CB982ec27Fa3'\namount     = 1000000000000000000000000\nblock_reward = 43819475601604278074866\ncandidate_info = {'Code': 0, 'Ret': {'BenefitAddress': '0x3b3519cb72f363bf2b394c0bab47cb982ec27fa3', 'BlsPubKey': '6b17b62a0ead315541f2...e216b0ef86da62f2370f303507e60c9d830db271208733a88e85796fc7a050006', 'DelegateEpoch': 0, 'DelegateRewardTotal': 0, ...}}\nclient1    = <tests.lib.client.Client object at 0x00000269F5A58208>\nclient2    = <tests.lib.client.Client object at 0x00000269F6F3DC50>\nclients_noconsensus = [<tests.lib.client.Client object at 0x00000269F5A58208>, <tests.lib.client.Client object at 0x00000269F6F3DC50>, <tests.lib.client.Client object at 0x00000269F6CA2FD0>, <tests.lib.client.Client object at 0x00000269F52B12B0>]\neconomic   = <tests.lib.economic.Economic object at 0x00000269F5A58668>\ngenesis    = Genesis(config=Config(chainId=100, eip155Block=3, cbft=Cbft(initialNodes=[{'node': 'enode://488fb1c783f7ac6a20d320e844...': '0'}}, number='0x0', gasUsed='0x0', parentHash='0x0000000000000000000000000000000000000000000000000000000000000000')\nincrease_amount = 500000000000000000000000\ninfo       = {'BenefitAddress': '0x3b3519cb72f363bf2b394c0bab47cb982ec27fa3', 'BlsPubKey': '6b17b62a0ead315541f2d1094433e4413ca5c5c...ee216b0ef86da62f2370f303507e60c9d830db271208733a88e85796fc7a050006', 'DelegateEpoch': 0, 'DelegateRewardTotal': 0, ...}\nnew_file   = 'D:\\\\GO\\\\src\\\\github.com\\\\PlatONnetwork\\\\PlatON-Go\\\\cases\\\\deploy\\\\tmp\\\\lifapan\\\\env/genesis.json'\nnew_genesis_env = <environment.env.TestEnvironment object at 0x00000269F5964CC0>\nnode       = <environment.node.Node object at 0x00000269F589DCC0>\nplan       = [{'Amount': 1000000000000000000000000, 'Epoch': 1}]\npledge_amount1 = 500000000000000000000000\npledge_amount2 = 0\npledge_amount3 = 185415731951871657754020\npunishment_amonut = 657292134024064171122990\nresult     = 0\nslash_blocks = '15'\nverifier_list = {'Code': 0, 'Ret': [{'BenefitAddress': '0x1000000000000000000000000000000000000003', 'BlsPubKey': 'fa340928f6edfb9f4c3...b96aa54009ffa655cea68ae81f44515483d9f5a939d31a9e0d34bd02', 'DelegateRewardTotal': '0x0', 'DelegateTotal': '0x0', ...}]}\n\ntests\\ppos\\test_general_punishment.py:804: AssertionError"}, "description": "\n    低出块率被最高处罚金低于质押金额（锁仓金额质押）\n    :param new_genesis_env:\n    :return:\n    ", "attachments": [{"name": "env log", "source": "1e5949a1-23d9-4560-b161-1279b67666a3-attachment.uri", "type": "text/uri-list"}, {"name": "env status", "source": "937a756e-8142-4143-8a6a-e756aed4bc26-attachment.txt", "type": "text/plain"}, {"name": "log", "source": "f606e76d-7eeb-4b34-abcd-c09dfe8741b8-attachment.txt", "type": "text/plain"}], "start": 1586632937485, "stop": 1586633156681, "uuid": "e727a146-9db7-40f4-ae56-d29a99c18abe", "historyId": "5d5e0954260259f2c1b299a990a7c3a5", "testCaseId": "ee69ea04ea803495268a16d9e3fa7906", "fullName": "tests.ppos.test_general_punishment#test_VP_GPFV_017", "labels": [{"name": "tag", "value": "P2"}, {"name": "parentSuite", "value": "tests.ppos"}, {"name": "suite", "value": "test_general_punishment"}, {"name": "host", "value": "hietel"}, {"name": "thread", "value": "25124-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.ppos.test_general_punishment"}]}