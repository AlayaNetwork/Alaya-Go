{"name": "test_IN_GA_001_IN_GA_002", "status": "failed", "statusDetails": {"message": "AssertionError: assert 7999999990268000000000 == 7999999990255200000000\n  -7999999990268000000000\n  +7999999990255200000000", "trace": "self = <tests.ppos.test_rewards_interface.TestGas object at 0x00000269F6FD0DD8>\nclients_new_node = [<tests.lib.client.Client object at 0x00000269F6FD3E10>, <tests.lib.client.Client object at 0x00000269F6C58128>, <tests.lib.client.Client object at 0x00000269F52DC320>, <tests.lib.client.Client object at 0x00000269F6FDDB00>]\nreset_environment = None\n\n    @pytest.mark.P1\n    def test_IN_GA_001_IN_GA_002(self, clients_new_node, reset_environment):\n        client1 = clients_new_node[0]\n        client2 = clients_new_node[1]\n        address1, _ = client1.economic.account.generate_account(client1.node.web3, init_amount)\n        address2, _ = client1.economic.account.generate_account(client1.node.web3, init_amount)\n        staking_and_delegate(client1, address1)\n        stakingnum = client1.staking.get_stakingblocknum()\n        balance_address1 = client1.node.eth.getBalance(address1)\n        log.info('Address {} balance : {}'.format(address1, balance_address1))\n        data = rlp.encode([rlp.encode(int(1004)), rlp.encode(0), rlp.encode(bytes.fromhex(client1.node.node_id)),\n                           rlp.encode(10 ** 18 * 1000)])\n        gas = (21000 + 6000 + 16000 + get_the_dynamic_parameter_gas_fee(data)) * client1.node.eth.gasPrice\n        assert 10 ** 18 * 9000 - gas == balance_address1\n    \n        staking_and_delegate(client2, address1)\n        time.sleep(3)\n        balance_address1_1 = client2.node.eth.getBalance(address1)\n        log.info('Address {} balance : {}'.format(address1, balance_address1_1))\n        data = rlp.encode([rlp.encode(int(1004)), rlp.encode(0), rlp.encode(bytes.fromhex(client1.node.node_id)),\n                           rlp.encode(10 ** 18 * 1000)])\n        gas = (21000 + 6000 + 16000 + get_the_dynamic_parameter_gas_fee(data)) * client1.node.eth.gasPrice\n>       assert balance_address1 - gas - 10 ** 18 * 1000 == balance_address1_1\nE       assert 7999999990268000000000 == 7999999990255200000000\nE         -7999999990268000000000\nE         +7999999990255200000000\n\n_          = '09ab4c3004154ef533d5fc89c96d27d00b750ef3b347b6b05af9a7a03ef923a1'\naddress1   = '0x5eA55264087Ad51C2bb75474774bAf5d15CD4a3D'\naddress2   = '0x8729f4Ca914e992d21F442893943f23EBe52c945'\nbalance_address1 = 8999999995134000000000\nbalance_address1_1 = 7999999990255200000000\nclient1    = <tests.lib.client.Client object at 0x00000269F6FD3E10>\nclient2    = <tests.lib.client.Client object at 0x00000269F6C58128>\nclients_new_node = [<tests.lib.client.Client object at 0x00000269F6FD3E10>, <tests.lib.client.Client object at 0x00000269F6C58128>, <tests.lib.client.Client object at 0x00000269F52DC320>, <tests.lib.client.Client object at 0x00000269F6FDDB00>]\ndata       = b'\\xf8U\\x83\\x82\\x03\\xec\\x81\\x80\\xb8B\\xb8@k\\x84\\xcc\\xae\\xae\\xd0\\xa9\\xbf[\\xf7\\xc6\\xf5\\xfb*\\xbb\\xee\\xa3TmeW\\xce\\xc0)\\x92\\...xb6(\\r\\x7f\\xc8\\xa2CQ\\x8e\\xf2x4\\xe5^\\xb0:\\xd6\\xd8\\xef/b{\\x8f\\x00\\x01\\xee\\x18S\\x00\\x8a\\x8965\\xc9\\xad\\xc5\\xde\\xa0\\x00\\x00'\ngas        = 4866000000000\nreset_environment = None\nself       = <tests.ppos.test_rewards_interface.TestGas object at 0x00000269F6FD0DD8>\nstakingnum = 13\n\ntests\\ppos\\test_rewards_interface.py:1342: AssertionError"}, "attachments": [{"name": "env log", "source": "1c9c0426-1ea7-4db2-9ce6-6743b6e685d2-attachment.uri", "type": "text/uri-list"}, {"name": "env status", "source": "f3f39af4-14c7-4f24-815d-f988fb688198-attachment.txt", "type": "text/plain"}, {"name": "log", "source": "f490416d-f9f4-4674-a85f-b3cf0a7affb0-attachment.txt", "type": "text/plain"}], "start": 1586651020691, "stop": 1586651043778, "uuid": "fea565e5-d506-4778-b29c-878b7491b87a", "historyId": "973758a9208a21d2651aa1be320c5309", "testCaseId": "d544ede7faca031578cbf12532ddacc5", "fullName": "tests.ppos.test_rewards_interface.TestGas#test_IN_GA_001_IN_GA_002", "labels": [{"name": "tag", "value": "P1"}, {"name": "parentSuite", "value": "tests.ppos"}, {"name": "suite", "value": "test_rewards_interface"}, {"name": "subSuite", "value": "TestGas"}, {"name": "host", "value": "hietel"}, {"name": "thread", "value": "25124-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.ppos.test_rewards_interface"}]}