{"name": "test_IN_DR_004_IN_DR_014", "status": "failed", "statusDetails": {"message": "AssertionError: assert 122930636550344322994646 == 122930636550357122994646\n  -122930636550344322994646\n  +122930636550357122994646", "trace": "self = <tests.ppos.test_rewards_interface.TestwithdrawDelegateReward object at 0x00000269F52E1C88>\nclients_new_node = [<tests.lib.client.Client object at 0x00000269F6CE6CC0>, <tests.lib.client.Client object at 0x00000269F52E9828>, <tests.lib.client.Client object at 0x00000269F6F38A58>, <tests.lib.client.Client object at 0x00000269F6C9F240>]\nreset_environment = None\n\n    @pytest.mark.P2\n    def test_IN_DR_004_IN_DR_014(self, clients_new_node, reset_environment):\n        client0 = clients_new_node[0]\n        client1 = clients_new_node[1]\n        address0, _ = client0.economic.account.generate_account(client0.node.web3, init_amount)\n        address1, _ = client0.economic.account.generate_account(client0.node.web3, init_amount)\n        staking_and_delegate(client0, address0)\n        staking_and_delegate(client1, address1)\n        staking_num0 = client0.staking.get_stakingblocknum()\n        staking_num1 = client1.staking.get_stakingblocknum()\n        result = client1.delegate.delegate(0, address1, node_id=client0.node.node_id, amount=delegate_amount)\n        assert_code(result, 0)\n        epoch = math.ceil(client0.node.block_number/client0.economic.settlement_size)\n        client0.economic.wait_settlement_blocknum(client0.node, 1)\n        rewards0 = client0.delegate.get_delegate_reward_by_nodeid(address0)\n        log.info('Address {} delegate rewards : {}'.format(address0, rewards0))\n        rewards1 = client1.delegate.get_delegate_reward_by_nodeid(address1)\n        log.info('Address {} delegate rewards : {}'.format(address1, rewards1))\n        rewards1_node0 = client1.delegate.get_delegate_reward_by_nodeid(address1, node_ids=[client0.node.node_id])\n        log.info('Address {} delegate nodeid {} rewards : {}'.format(address1, client0.node.node_id, rewards1_node0))\n    \n        balance_before0 = client0.node.eth.getBalance(address0)\n        log.info('Address {} before withdraw delegate balance : {}'.format(address0, balance_before0))\n        balance_before1 = client1.node.eth.getBalance(address1)\n        log.info('Address {} before withdraw delegate balance : {}'.format(address0, balance_before1))\n        result = client0.delegate.withdrew_delegate(staking_num0, address0, amount=delegate_amount)\n        assert_code(result, 0)\n        result = client0.delegate.withdrew_delegate(staking_num0, address1, amount=delegate_amount)\n        assert_code(result, 0)\n    \n        assert_cumulativeIncome_delegateepoch(client1, address1, delegateepoch=epoch)\n        data0 = rlp.encode([rlp.encode(int(1005)), rlp.encode(staking_num0), rlp.encode(bytes.fromhex(\n            client0.node.node_id)), rlp.encode(delegate_amount)])\n        log.info('data {}'.format(data0))\n        data1 = rlp.encode([rlp.encode(int(1005)), rlp.encode(staking_num1), rlp.encode(bytes.fromhex(\n            client1.node.node_id)), rlp.encode(delegate_amount)])\n        gas0 = (21000 + 6000 + 8000 + 100 + get_the_dynamic_parameter_gas_fee(data0)) * client0.node.eth.gasPrice\n        gas1 = (21000 + 6000 + 8000 + 100 + get_the_dynamic_parameter_gas_fee(data1)) * client0.node.eth.gasPrice\n        print(gas0)\n        print(get_the_dynamic_parameter_gas_fee(data0))\n        balance_after0 = client0.node.eth.getBalance(address0)\n        log.info('Address {} before withdraw delegate balance : {}'.format(address0, balance_after0))\n        balance_after1 = client0.node.eth.getBalance(address1)\n        log.info('Address {} before withdraw delegate balance : {}'.format(address0, balance_after1))\n        assert balance_before0 - gas0 + rewards0 + delegate_amount == balance_after0\n>       assert balance_before1 - gas1 + rewards1_node0 + delegate_amount == balance_after1\nE       assert 122930636550344322994646 == 122930636550357122994646\nE         -122930636550344322994646\nE         +122930636550357122994646\n\n_          = 'd92ab6fa9dafd3c0f856be7e1aff97c809fa39dc508e6a9fe0b75767f9b32729'\naddress0   = '0xe381C9741587fE4B534093940C1a89e3Bd7dd6E3'\naddress1   = '0x20E0ccD601435D60AE2CE8d13E8d1704F8C98392'\nbalance_after0 = 123930636555235922994646\nbalance_after1 = 122930636550357122994646\nbalance_before0 = 8999999995134000000000\nbalance_before1 = 7999999990255200000000\nclient0    = <tests.lib.client.Client object at 0x00000269F6CE6CC0>\nclient1    = <tests.lib.client.Client object at 0x00000269F52E9828>\nclients_new_node = [<tests.lib.client.Client object at 0x00000269F6CE6CC0>, <tests.lib.client.Client object at 0x00000269F52E9828>, <tests.lib.client.Client object at 0x00000269F6F38A58>, <tests.lib.client.Client object at 0x00000269F6C9F240>]\ndata0      = b'\\xf8T\\x83\\x82\\x03\\xed\\x0b\\xb8B\\xb8@k\\x84\\xcc\\xae\\xae\\xd0\\xa9\\xbf[\\xf7\\xc6\\xf5\\xfb*\\xbb\\xee\\xa3TmeW\\xce\\xc0)\\x92\\xf7u...xb6(\\r\\x7f\\xc8\\xa2CQ\\x8e\\xf2x4\\xe5^\\xb0:\\xd6\\xd8\\xef/b{\\x8f\\x00\\x01\\xee\\x18S\\x00\\x8a\\x8965\\xc9\\xad\\xc5\\xde\\xa0\\x00\\x00'\ndata1      = b'\\xf8T\\x83\\x82\\x03\\xed\\x18\\xb8B\\xb8@\\xb4 E\\xbc\\x98\\x1d\\xcbo\\xe4\\xe8f\\xfbb\\xea>\\x1d\\xc3\\xe0\\x91\\x9bc\\ni\\xd2\\x93\\xa5u\\x...xa0\\xb2\\x99Pt/\\xa3\\xb7\\xe6\\xa0\\xd2\\xbc\\x9c\\xbe9(G\\x02\\xdcU\\xa7\\xe2\\xcbj\\xc2\\xf7H\\x8a\\x8965\\xc9\\xad\\xc5\\xde\\xa0\\x00\\x00'\nepoch      = 1\ngas0       = 4069200000000\ngas1       = 4082000000000\nreset_environment = None\nresult     = 0\nrewards0   = 113930636564171122994646\nrewards1   = 385611385294117647058798\nrewards1_node0 = 113930636564171122994646\nself       = <tests.ppos.test_rewards_interface.TestwithdrawDelegateReward object at 0x00000269F52E1C88>\nstaking_num0 = 11\nstaking_num1 = 24\n\ntests\\ppos\\test_rewards_interface.py:854: AssertionError"}, "attachments": [{"name": "env log", "source": "a385971c-471e-430a-abf3-92fc0fc74c72-attachment.uri", "type": "text/uri-list"}, {"name": "env status", "source": "f55cd540-153f-46aa-9895-acbfd5113e41-attachment.txt", "type": "text/plain"}, {"name": "log", "source": "ac8d283e-9513-48fa-bb62-876d3bd6fab5-attachment.txt", "type": "text/plain"}], "start": 1586648592681, "stop": 1586648792144, "uuid": "90ecd4db-ba36-4d72-ade6-90ed7aff032d", "historyId": "970793492c59ed915d00a2e3afdf6727", "testCaseId": "16bf089aeaac2e83b87a4d221352e04b", "fullName": "tests.ppos.test_rewards_interface.TestwithdrawDelegateReward#test_IN_DR_004_IN_DR_014", "labels": [{"name": "tag", "value": "P2"}, {"name": "parentSuite", "value": "tests.ppos"}, {"name": "suite", "value": "test_rewards_interface"}, {"name": "subSuite", "value": "TestwithdrawDelegateReward"}, {"name": "host", "value": "hietel"}, {"name": "thread", "value": "25124-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.ppos.test_rewards_interface"}]}