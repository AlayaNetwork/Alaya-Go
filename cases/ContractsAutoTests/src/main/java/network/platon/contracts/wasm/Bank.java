package network.platon.contracts.wasm;

import com.platon.rlp.datatypes.Uint8;
import com.platon.rlp.datatypes.WasmAddress;
import java.math.BigInteger;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.web3j.abi.WasmEventEncoder;
import org.web3j.abi.WasmFunctionEncoder;
import org.web3j.abi.datatypes.WasmEvent;
import org.web3j.abi.datatypes.WasmEventParameter;
import org.web3j.abi.datatypes.WasmFunction;
import org.web3j.crypto.Credentials;
import org.web3j.protocol.Web3j;
import org.web3j.protocol.core.DefaultBlockParameter;
import org.web3j.protocol.core.RemoteCall;
import org.web3j.protocol.core.methods.request.PlatonFilter;
import org.web3j.protocol.core.methods.response.Log;
import org.web3j.protocol.core.methods.response.TransactionReceipt;
import org.web3j.tx.TransactionManager;
import org.web3j.tx.WasmContract;
import org.web3j.tx.gas.GasProvider;
import rx.Observable;
import rx.functions.Func1;

/**
 * <p>Auto generated code.
 * <p><strong>Do not modify!</strong>
 * <p>Please use the <a href="https://github.com/PlatONnetwork/client-sdk-java/releases">platon-web3j command line tools</a>,
 * or the org.web3j.codegen.WasmFunctionWrapperGenerator in the 
 * <a href="https://github.com/PlatONnetwork/client-sdk-java/tree/master/codegen">codegen module</a> to update.
 *
 * <p>Generated with platon-web3j version 0.13.0.6.
 */
public class Bank extends WasmContract {
    private static String BINARY_0 = "";

    private static String BINARY_1 = "";

    public static String BINARY = BINARY_0 + BINARY_1;

    public static final String FUNC_DIVSADDON = "DivsAddon";

    public static final String FUNC_SELL = "sell";

    public static final String FUNC_IDD = "IDD";

    public static final String FUNC_MYTOKENS = "myTokens";

    public static final String FUNC_REINVEST = "reinvest";

    public static final String FUNC_BUY = "buy";

    public static final String FUNC_CALCULATEETHEREUMRECEIVED = "calculateEthereumReceived";

    public static final String FUNC_EXITFEE = "exitFee";

    public static final String FUNC_EXIT = "exit";

    public static final String FUNC_WITHDRAW = "withdraw";

    public static final String FUNC_TRANSFER = "transfer";

    public static final String FUNC_TOTALETHEREUMBALANCE = "totalEthereumBalance";

    public static final String FUNC_TOTALSUPPLY = "totalSupply";

    public static final String FUNC_MYDIVIDENDS = "myDividends";

    public static final String FUNC_BALANCEOF = "balanceOf";

    public static final String FUNC_DIVIDENDSOF = "dividendsOf";

    public static final String FUNC_SELLPRICE = "sellPrice";

    public static final String FUNC_BUYPRICE = "buyPrice";

    public static final String FUNC_CALCULATETOKENSRECEIVED = "calculateTokensReceived";

    public static final WasmEvent ONTOKENSELL_EVENT = new WasmEvent("onTokenSell", Arrays.asList(new WasmEventParameter(WasmAddress.class, true)), Arrays.asList(new WasmEventParameter(BigInteger.class) , new WasmEventParameter(BigInteger.class) , new WasmEventParameter(BigInteger.class) , new WasmEventParameter(BigInteger.class)));
    ;

    public static final WasmEvent ONREINVESTMENT_EVENT = new WasmEvent("onReinvestment", Arrays.asList(new WasmEventParameter(WasmAddress.class, true)), Arrays.asList(new WasmEventParameter(BigInteger.class) , new WasmEventParameter(BigInteger.class)));
    ;

    public static final WasmEvent ONWITHDRAW_EVENT = new WasmEvent("onWithdraw", Arrays.asList(new WasmEventParameter(WasmAddress.class, true)), Arrays.asList(new WasmEventParameter(BigInteger.class)));
    ;

    public static final WasmEvent TRANSFER_EVENT = new WasmEvent("Transfer", Arrays.asList(new WasmEventParameter(WasmAddress.class, true)), Arrays.asList(new WasmEventParameter(WasmAddress.class) , new WasmEventParameter(BigInteger.class)));
    ;

    public static final WasmEvent TESTDATA_EVENT = new WasmEvent("TestData", Arrays.asList(new WasmEventParameter(WasmAddress.class, true)), Arrays.asList(new WasmEventParameter(BigInteger.class) , new WasmEventParameter(BigInteger.class) , new WasmEventParameter(BigInteger.class)));
    ;

    public static final WasmEvent ONTOKENPURCHASE_EVENT = new WasmEvent("onTokenPurchase", Arrays.asList(new WasmEventParameter(WasmAddress.class, true)), Arrays.asList(new WasmEventParameter(BigInteger.class) , new WasmEventParameter(BigInteger.class) , new WasmEventParameter(WasmAddress.class) , new WasmEventParameter(BigInteger.class) , new WasmEventParameter(BigInteger.class)));
    ;

    protected Bank(String contractAddress, Web3j web3j, Credentials credentials, GasProvider contractGasProvider, Long chainId) {
        super(BINARY, contractAddress, web3j, credentials, contractGasProvider, chainId);
    }

    protected Bank(String contractAddress, Web3j web3j, TransactionManager transactionManager, GasProvider contractGasProvider, Long chainId) {
        super(BINARY, contractAddress, web3j, transactionManager, contractGasProvider, chainId);
    }

    public RemoteCall<TransactionReceipt> DivsAddon() {
        final WasmFunction function = new WasmFunction(FUNC_DIVSADDON, Arrays.asList(), Void.class);
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> DivsAddon(BigInteger vonValue) {
        final WasmFunction function = new WasmFunction(FUNC_DIVSADDON, Arrays.asList(), Void.class);
        return executeRemoteCallTransaction(function, vonValue);
    }

    public RemoteCall<TransactionReceipt> sell(BigInteger _amountOfTokens) {
        final WasmFunction function = new WasmFunction(FUNC_SELL, Arrays.asList(_amountOfTokens), Void.class);
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> sell(BigInteger _amountOfTokens, BigInteger vonValue) {
        final WasmFunction function = new WasmFunction(FUNC_SELL, Arrays.asList(_amountOfTokens), Void.class);
        return executeRemoteCallTransaction(function, vonValue);
    }

    public RemoteCall<TransactionReceipt> IDD() {
        final WasmFunction function = new WasmFunction(FUNC_IDD, Arrays.asList(), Void.class);
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> IDD(BigInteger vonValue) {
        final WasmFunction function = new WasmFunction(FUNC_IDD, Arrays.asList(), Void.class);
        return executeRemoteCallTransaction(function, vonValue);
    }

    public List<OnTokenSellEventResponse> getOnTokenSellEvents(TransactionReceipt transactionReceipt) {
        List<WasmContract.WasmEventValuesWithLog> valueList = extractEventParametersWithLog(ONTOKENSELL_EVENT, transactionReceipt);
        ArrayList<OnTokenSellEventResponse> responses = new ArrayList<OnTokenSellEventResponse>(valueList.size());
        for (WasmContract.WasmEventValuesWithLog eventValues : valueList) {
            OnTokenSellEventResponse typedResponse = new OnTokenSellEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.topic = (String) eventValues.getIndexedValues().get(0);
            typedResponse.arg1 = (BigInteger) eventValues.getNonIndexedValues().get(0);
            typedResponse.arg2 = (BigInteger) eventValues.getNonIndexedValues().get(1);
            typedResponse.arg3 = (BigInteger) eventValues.getNonIndexedValues().get(2);
            typedResponse.arg4 = (BigInteger) eventValues.getNonIndexedValues().get(3);
            responses.add(typedResponse);
        }
        return responses;
    }

    public Observable<OnTokenSellEventResponse> onTokenSellEventObservable(PlatonFilter filter) {
        return web3j.platonLogObservable(filter).map(new Func1<Log, OnTokenSellEventResponse>() {
            @Override
            public OnTokenSellEventResponse call(Log log) {
                WasmContract.WasmEventValuesWithLog eventValues = extractEventParametersWithLog(ONTOKENSELL_EVENT, log);
                OnTokenSellEventResponse typedResponse = new OnTokenSellEventResponse();
                typedResponse.log = log;
                typedResponse.topic = (String) eventValues.getIndexedValues().get(0);
                typedResponse.arg1 = (BigInteger) eventValues.getNonIndexedValues().get(0);
                typedResponse.arg2 = (BigInteger) eventValues.getNonIndexedValues().get(1);
                typedResponse.arg3 = (BigInteger) eventValues.getNonIndexedValues().get(2);
                typedResponse.arg4 = (BigInteger) eventValues.getNonIndexedValues().get(3);
                return typedResponse;
            }
        });
    }

    public Observable<OnTokenSellEventResponse> onTokenSellEventObservable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        PlatonFilter filter = new PlatonFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(WasmEventEncoder.encode(ONTOKENSELL_EVENT));
        return onTokenSellEventObservable(filter);
    }

    public RemoteCall<BigInteger> myTokens() {
        final WasmFunction function = new WasmFunction(FUNC_MYTOKENS, Arrays.asList(), BigInteger.class);
        return executeRemoteCall(function, BigInteger.class);
    }

    public List<OnReinvestmentEventResponse> getOnReinvestmentEvents(TransactionReceipt transactionReceipt) {
        List<WasmContract.WasmEventValuesWithLog> valueList = extractEventParametersWithLog(ONREINVESTMENT_EVENT, transactionReceipt);
        ArrayList<OnReinvestmentEventResponse> responses = new ArrayList<OnReinvestmentEventResponse>(valueList.size());
        for (WasmContract.WasmEventValuesWithLog eventValues : valueList) {
            OnReinvestmentEventResponse typedResponse = new OnReinvestmentEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.topic = (String) eventValues.getIndexedValues().get(0);
            typedResponse.arg1 = (BigInteger) eventValues.getNonIndexedValues().get(0);
            typedResponse.arg2 = (BigInteger) eventValues.getNonIndexedValues().get(1);
            responses.add(typedResponse);
        }
        return responses;
    }

    public Observable<OnReinvestmentEventResponse> onReinvestmentEventObservable(PlatonFilter filter) {
        return web3j.platonLogObservable(filter).map(new Func1<Log, OnReinvestmentEventResponse>() {
            @Override
            public OnReinvestmentEventResponse call(Log log) {
                WasmContract.WasmEventValuesWithLog eventValues = extractEventParametersWithLog(ONREINVESTMENT_EVENT, log);
                OnReinvestmentEventResponse typedResponse = new OnReinvestmentEventResponse();
                typedResponse.log = log;
                typedResponse.topic = (String) eventValues.getIndexedValues().get(0);
                typedResponse.arg1 = (BigInteger) eventValues.getNonIndexedValues().get(0);
                typedResponse.arg2 = (BigInteger) eventValues.getNonIndexedValues().get(1);
                return typedResponse;
            }
        });
    }

    public Observable<OnReinvestmentEventResponse> onReinvestmentEventObservable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        PlatonFilter filter = new PlatonFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(WasmEventEncoder.encode(ONREINVESTMENT_EVENT));
        return onReinvestmentEventObservable(filter);
    }

    public List<OnWithdrawEventResponse> getOnWithdrawEvents(TransactionReceipt transactionReceipt) {
        List<WasmContract.WasmEventValuesWithLog> valueList = extractEventParametersWithLog(ONWITHDRAW_EVENT, transactionReceipt);
        ArrayList<OnWithdrawEventResponse> responses = new ArrayList<OnWithdrawEventResponse>(valueList.size());
        for (WasmContract.WasmEventValuesWithLog eventValues : valueList) {
            OnWithdrawEventResponse typedResponse = new OnWithdrawEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.topic = (String) eventValues.getIndexedValues().get(0);
            typedResponse.arg1 = (BigInteger) eventValues.getNonIndexedValues().get(0);
            responses.add(typedResponse);
        }
        return responses;
    }

    public Observable<OnWithdrawEventResponse> onWithdrawEventObservable(PlatonFilter filter) {
        return web3j.platonLogObservable(filter).map(new Func1<Log, OnWithdrawEventResponse>() {
            @Override
            public OnWithdrawEventResponse call(Log log) {
                WasmContract.WasmEventValuesWithLog eventValues = extractEventParametersWithLog(ONWITHDRAW_EVENT, log);
                OnWithdrawEventResponse typedResponse = new OnWithdrawEventResponse();
                typedResponse.log = log;
                typedResponse.topic = (String) eventValues.getIndexedValues().get(0);
                typedResponse.arg1 = (BigInteger) eventValues.getNonIndexedValues().get(0);
                return typedResponse;
            }
        });
    }

    public Observable<OnWithdrawEventResponse> onWithdrawEventObservable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        PlatonFilter filter = new PlatonFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(WasmEventEncoder.encode(ONWITHDRAW_EVENT));
        return onWithdrawEventObservable(filter);
    }

    public List<TransferEventResponse> getTransferEvents(TransactionReceipt transactionReceipt) {
        List<WasmContract.WasmEventValuesWithLog> valueList = extractEventParametersWithLog(TRANSFER_EVENT, transactionReceipt);
        ArrayList<TransferEventResponse> responses = new ArrayList<TransferEventResponse>(valueList.size());
        for (WasmContract.WasmEventValuesWithLog eventValues : valueList) {
            TransferEventResponse typedResponse = new TransferEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.topic = (String) eventValues.getIndexedValues().get(0);
            typedResponse.arg1 = (WasmAddress) eventValues.getNonIndexedValues().get(0);
            typedResponse.arg2 = (BigInteger) eventValues.getNonIndexedValues().get(1);
            responses.add(typedResponse);
        }
        return responses;
    }

    public Observable<TransferEventResponse> transferEventObservable(PlatonFilter filter) {
        return web3j.platonLogObservable(filter).map(new Func1<Log, TransferEventResponse>() {
            @Override
            public TransferEventResponse call(Log log) {
                WasmContract.WasmEventValuesWithLog eventValues = extractEventParametersWithLog(TRANSFER_EVENT, log);
                TransferEventResponse typedResponse = new TransferEventResponse();
                typedResponse.log = log;
                typedResponse.topic = (String) eventValues.getIndexedValues().get(0);
                typedResponse.arg1 = (WasmAddress) eventValues.getNonIndexedValues().get(0);
                typedResponse.arg2 = (BigInteger) eventValues.getNonIndexedValues().get(1);
                return typedResponse;
            }
        });
    }

    public Observable<TransferEventResponse> transferEventObservable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        PlatonFilter filter = new PlatonFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(WasmEventEncoder.encode(TRANSFER_EVENT));
        return transferEventObservable(filter);
    }

    public List<TestDataEventResponse> getTestDataEvents(TransactionReceipt transactionReceipt) {
        List<WasmContract.WasmEventValuesWithLog> valueList = extractEventParametersWithLog(TESTDATA_EVENT, transactionReceipt);
        ArrayList<TestDataEventResponse> responses = new ArrayList<TestDataEventResponse>(valueList.size());
        for (WasmContract.WasmEventValuesWithLog eventValues : valueList) {
            TestDataEventResponse typedResponse = new TestDataEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.topic = (String) eventValues.getIndexedValues().get(0);
            typedResponse.arg1 = (BigInteger) eventValues.getNonIndexedValues().get(0);
            typedResponse.arg2 = (BigInteger) eventValues.getNonIndexedValues().get(1);
            typedResponse.arg3 = (BigInteger) eventValues.getNonIndexedValues().get(2);
            responses.add(typedResponse);
        }
        return responses;
    }

    public Observable<TestDataEventResponse> testDataEventObservable(PlatonFilter filter) {
        return web3j.platonLogObservable(filter).map(new Func1<Log, TestDataEventResponse>() {
            @Override
            public TestDataEventResponse call(Log log) {
                WasmContract.WasmEventValuesWithLog eventValues = extractEventParametersWithLog(TESTDATA_EVENT, log);
                TestDataEventResponse typedResponse = new TestDataEventResponse();
                typedResponse.log = log;
                typedResponse.topic = (String) eventValues.getIndexedValues().get(0);
                typedResponse.arg1 = (BigInteger) eventValues.getNonIndexedValues().get(0);
                typedResponse.arg2 = (BigInteger) eventValues.getNonIndexedValues().get(1);
                typedResponse.arg3 = (BigInteger) eventValues.getNonIndexedValues().get(2);
                return typedResponse;
            }
        });
    }

    public Observable<TestDataEventResponse> testDataEventObservable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        PlatonFilter filter = new PlatonFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(WasmEventEncoder.encode(TESTDATA_EVENT));
        return testDataEventObservable(filter);
    }

    public static RemoteCall<Bank> deploy(Web3j web3j, Credentials credentials, GasProvider contractGasProvider, Long chainId) {
        String encodedConstructor = WasmFunctionEncoder.encodeConstructor(BINARY, Arrays.asList());
        return deployRemoteCall(Bank.class, web3j, credentials, contractGasProvider, encodedConstructor, chainId);
    }

    public static RemoteCall<Bank> deploy(Web3j web3j, TransactionManager transactionManager, GasProvider contractGasProvider, Long chainId) {
        String encodedConstructor = WasmFunctionEncoder.encodeConstructor(BINARY, Arrays.asList());
        return deployRemoteCall(Bank.class, web3j, transactionManager, contractGasProvider, encodedConstructor, chainId);
    }

    public static RemoteCall<Bank> deploy(Web3j web3j, Credentials credentials, GasProvider contractGasProvider, BigInteger initialVonValue, Long chainId) {
        String encodedConstructor = WasmFunctionEncoder.encodeConstructor(BINARY, Arrays.asList());
        return deployRemoteCall(Bank.class, web3j, credentials, contractGasProvider, encodedConstructor, initialVonValue, chainId);
    }

    public static RemoteCall<Bank> deploy(Web3j web3j, TransactionManager transactionManager, GasProvider contractGasProvider, BigInteger initialVonValue, Long chainId) {
        String encodedConstructor = WasmFunctionEncoder.encodeConstructor(BINARY, Arrays.asList());
        return deployRemoteCall(Bank.class, web3j, transactionManager, contractGasProvider, encodedConstructor, initialVonValue, chainId);
    }

    public List<OnTokenPurchaseEventResponse> getOnTokenPurchaseEvents(TransactionReceipt transactionReceipt) {
        List<WasmContract.WasmEventValuesWithLog> valueList = extractEventParametersWithLog(ONTOKENPURCHASE_EVENT, transactionReceipt);
        ArrayList<OnTokenPurchaseEventResponse> responses = new ArrayList<OnTokenPurchaseEventResponse>(valueList.size());
        for (WasmContract.WasmEventValuesWithLog eventValues : valueList) {
            OnTokenPurchaseEventResponse typedResponse = new OnTokenPurchaseEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.topic = (String) eventValues.getIndexedValues().get(0);
            typedResponse.arg1 = (BigInteger) eventValues.getNonIndexedValues().get(0);
            typedResponse.arg2 = (BigInteger) eventValues.getNonIndexedValues().get(1);
            typedResponse.arg3 = (WasmAddress) eventValues.getNonIndexedValues().get(2);
            typedResponse.arg4 = (BigInteger) eventValues.getNonIndexedValues().get(3);
            typedResponse.arg5 = (BigInteger) eventValues.getNonIndexedValues().get(4);
            responses.add(typedResponse);
        }
        return responses;
    }

    public Observable<OnTokenPurchaseEventResponse> onTokenPurchaseEventObservable(PlatonFilter filter) {
        return web3j.platonLogObservable(filter).map(new Func1<Log, OnTokenPurchaseEventResponse>() {
            @Override
            public OnTokenPurchaseEventResponse call(Log log) {
                WasmContract.WasmEventValuesWithLog eventValues = extractEventParametersWithLog(ONTOKENPURCHASE_EVENT, log);
                OnTokenPurchaseEventResponse typedResponse = new OnTokenPurchaseEventResponse();
                typedResponse.log = log;
                typedResponse.topic = (String) eventValues.getIndexedValues().get(0);
                typedResponse.arg1 = (BigInteger) eventValues.getNonIndexedValues().get(0);
                typedResponse.arg2 = (BigInteger) eventValues.getNonIndexedValues().get(1);
                typedResponse.arg3 = (WasmAddress) eventValues.getNonIndexedValues().get(2);
                typedResponse.arg4 = (BigInteger) eventValues.getNonIndexedValues().get(3);
                typedResponse.arg5 = (BigInteger) eventValues.getNonIndexedValues().get(4);
                return typedResponse;
            }
        });
    }

    public Observable<OnTokenPurchaseEventResponse> onTokenPurchaseEventObservable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        PlatonFilter filter = new PlatonFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(WasmEventEncoder.encode(ONTOKENPURCHASE_EVENT));
        return onTokenPurchaseEventObservable(filter);
    }

    public RemoteCall<TransactionReceipt> reinvest() {
        final WasmFunction function = new WasmFunction(FUNC_REINVEST, Arrays.asList(), Void.class);
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> reinvest(BigInteger vonValue) {
        final WasmFunction function = new WasmFunction(FUNC_REINVEST, Arrays.asList(), Void.class);
        return executeRemoteCallTransaction(function, vonValue);
    }

    public RemoteCall<TransactionReceipt> buy(WasmAddress _referredBy) {
        final WasmFunction function = new WasmFunction(FUNC_BUY, Arrays.asList(_referredBy), Void.class);
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> buy(WasmAddress _referredBy, BigInteger vonValue) {
        final WasmFunction function = new WasmFunction(FUNC_BUY, Arrays.asList(_referredBy), Void.class);
        return executeRemoteCallTransaction(function, vonValue);
    }

    public RemoteCall<BigInteger> calculateEthereumReceived(BigInteger _tokensToSell) {
        final WasmFunction function = new WasmFunction(FUNC_CALCULATEETHEREUMRECEIVED, Arrays.asList(_tokensToSell), BigInteger.class);
        return executeRemoteCall(function, BigInteger.class);
    }

    public RemoteCall<Uint8> exitFee() {
        final WasmFunction function = new WasmFunction(FUNC_EXITFEE, Arrays.asList(), Uint8.class);
        return executeRemoteCall(function, Uint8.class);
    }

    public RemoteCall<TransactionReceipt> exit() {
        final WasmFunction function = new WasmFunction(FUNC_EXIT, Arrays.asList(), Void.class);
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> exit(BigInteger vonValue) {
        final WasmFunction function = new WasmFunction(FUNC_EXIT, Arrays.asList(), Void.class);
        return executeRemoteCallTransaction(function, vonValue);
    }

    public RemoteCall<TransactionReceipt> withdraw() {
        final WasmFunction function = new WasmFunction(FUNC_WITHDRAW, Arrays.asList(), Void.class);
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> withdraw(BigInteger vonValue) {
        final WasmFunction function = new WasmFunction(FUNC_WITHDRAW, Arrays.asList(), Void.class);
        return executeRemoteCallTransaction(function, vonValue);
    }

    public RemoteCall<TransactionReceipt> transfer(WasmAddress _toAddress, BigInteger _amountOfTokens) {
        final WasmFunction function = new WasmFunction(FUNC_TRANSFER, Arrays.asList(_toAddress,_amountOfTokens), Void.class);
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> transfer(WasmAddress _toAddress, BigInteger _amountOfTokens, BigInteger vonValue) {
        final WasmFunction function = new WasmFunction(FUNC_TRANSFER, Arrays.asList(_toAddress,_amountOfTokens), Void.class);
        return executeRemoteCallTransaction(function, vonValue);
    }

    public RemoteCall<BigInteger> totalEthereumBalance() {
        final WasmFunction function = new WasmFunction(FUNC_TOTALETHEREUMBALANCE, Arrays.asList(), BigInteger.class);
        return executeRemoteCall(function, BigInteger.class);
    }

    public RemoteCall<BigInteger> totalSupply() {
        final WasmFunction function = new WasmFunction(FUNC_TOTALSUPPLY, Arrays.asList(), BigInteger.class);
        return executeRemoteCall(function, BigInteger.class);
    }

    public RemoteCall<BigInteger> myDividends(Boolean _includeReferralBonus) {
        final WasmFunction function = new WasmFunction(FUNC_MYDIVIDENDS, Arrays.asList(_includeReferralBonus), BigInteger.class);
        return executeRemoteCall(function, BigInteger.class);
    }

    public RemoteCall<BigInteger> balanceOf(WasmAddress _customerAddress) {
        final WasmFunction function = new WasmFunction(FUNC_BALANCEOF, Arrays.asList(_customerAddress), BigInteger.class);
        return executeRemoteCall(function, BigInteger.class);
    }

    public RemoteCall<BigInteger> dividendsOf(WasmAddress _customerAddress) {
        final WasmFunction function = new WasmFunction(FUNC_DIVIDENDSOF, Arrays.asList(_customerAddress), BigInteger.class);
        return executeRemoteCall(function, BigInteger.class);
    }

    public RemoteCall<BigInteger> sellPrice() {
        final WasmFunction function = new WasmFunction(FUNC_SELLPRICE, Arrays.asList(), BigInteger.class);
        return executeRemoteCall(function, BigInteger.class);
    }

    public RemoteCall<BigInteger> buyPrice() {
        final WasmFunction function = new WasmFunction(FUNC_BUYPRICE, Arrays.asList(), BigInteger.class);
        return executeRemoteCall(function, BigInteger.class);
    }

    public RemoteCall<BigInteger> calculateTokensReceived(BigInteger _ethereumToSpend) {
        final WasmFunction function = new WasmFunction(FUNC_CALCULATETOKENSRECEIVED, Arrays.asList(_ethereumToSpend), BigInteger.class);
        return executeRemoteCall(function, BigInteger.class);
    }

    public static Bank load(String contractAddress, Web3j web3j, Credentials credentials, GasProvider contractGasProvider, Long chainId) {
        return new Bank(contractAddress, web3j, credentials, contractGasProvider, chainId);
    }

    public static Bank load(String contractAddress, Web3j web3j, TransactionManager transactionManager, GasProvider contractGasProvider, Long chainId) {
        return new Bank(contractAddress, web3j, transactionManager, contractGasProvider, chainId);
    }

    public static class OnTokenSellEventResponse {
        public Log log;

        public String topic;

        public BigInteger arg1;

        public BigInteger arg2;

        public BigInteger arg3;

        public BigInteger arg4;
    }

    public static class OnReinvestmentEventResponse {
        public Log log;

        public String topic;

        public BigInteger arg1;

        public BigInteger arg2;
    }

    public static class OnWithdrawEventResponse {
        public Log log;

        public String topic;

        public BigInteger arg1;
    }

    public static class TransferEventResponse {
        public Log log;

        public String topic;

        public WasmAddress arg1;

        public BigInteger arg2;
    }

    public static class TestDataEventResponse {
        public Log log;

        public String topic;

        public BigInteger arg1;

        public BigInteger arg2;

        public BigInteger arg3;
    }

    public static class OnTokenPurchaseEventResponse {
        public Log log;

        public String topic;

        public BigInteger arg1;

        public BigInteger arg2;

        public WasmAddress arg3;

        public BigInteger arg4;

        public BigInteger arg5;
    }
}
