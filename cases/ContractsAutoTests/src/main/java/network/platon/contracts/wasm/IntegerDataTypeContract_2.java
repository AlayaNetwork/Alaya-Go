package network.platon.contracts.wasm;

import com.platon.rlp.datatypes.Int32;
import com.platon.rlp.datatypes.Int64;
import com.platon.rlp.datatypes.Int8;
import com.platon.rlp.datatypes.Uint32;
import com.platon.rlp.datatypes.Uint64;
import com.platon.rlp.datatypes.Uint8;
import java.math.BigInteger;
import java.util.Arrays;
import org.web3j.abi.WasmFunctionEncoder;
import org.web3j.abi.datatypes.WasmFunction;
import org.web3j.crypto.Credentials;
import org.web3j.protocol.Web3j;
import org.web3j.protocol.core.RemoteCall;
import org.web3j.protocol.core.methods.response.TransactionReceipt;
import org.web3j.tx.TransactionManager;
import org.web3j.tx.WasmContract;
import org.web3j.tx.gas.GasProvider;

/**
 * <p>Auto generated code.
 * <p><strong>Do not modify!</strong>
 * <p>Please use the <a href="https://github.com/PlatONnetwork/client-sdk-java/releases">platon-web3j command line tools</a>,
 * or the org.web3j.codegen.WasmFunctionWrapperGenerator in the 
 * <a href="https://github.com/PlatONnetwork/client-sdk-java/tree/master/codegen">codegen module</a> to update.
 *
 * <p>Generated with platon-web3j version 0.9.1.2-SNAPSHOT.
 */
public class IntegerDataTypeContract_2 extends WasmContract {
    private static String BINARY_0 = "";

    public static String BINARY = BINARY_0;

    public static final String FUNC_SETINT8 = "setInt8";

    public static final String FUNC_GETINT8 = "getInt8";

    public static final String FUNC_SETINT32 = "setInt32";

    public static final String FUNC_GETINT32 = "getInt32";

    public static final String FUNC_SETINT64 = "setInt64";

    public static final String FUNC_GETINT64 = "getInt64";

    public static final String FUNC_SETUINT8 = "setUint8";

    public static final String FUNC_GETUINT8 = "getUint8";

    public static final String FUNC_SETUINT32 = "setUint32";

    public static final String FUNC_GETUINT32 = "getUint32";

    public static final String FUNC_SETUINT64 = "setUint64";

    public static final String FUNC_GETUINT64 = "getUint64";

    protected IntegerDataTypeContract_2(String contractAddress, Web3j web3j, Credentials credentials, GasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, credentials, contractGasProvider);
    }

    protected IntegerDataTypeContract_2(String contractAddress, Web3j web3j, TransactionManager transactionManager, GasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public static RemoteCall<IntegerDataTypeContract_2> deploy(Web3j web3j, Credentials credentials, GasProvider contractGasProvider) {
        String encodedConstructor = WasmFunctionEncoder.encodeConstructor(BINARY, Arrays.asList());
        return deployRemoteCall(IntegerDataTypeContract_2.class, web3j, credentials, contractGasProvider, encodedConstructor);
    }

    public static RemoteCall<IntegerDataTypeContract_2> deploy(Web3j web3j, TransactionManager transactionManager, GasProvider contractGasProvider) {
        String encodedConstructor = WasmFunctionEncoder.encodeConstructor(BINARY, Arrays.asList());
        return deployRemoteCall(IntegerDataTypeContract_2.class, web3j, transactionManager, contractGasProvider, encodedConstructor);
    }

    public static RemoteCall<IntegerDataTypeContract_2> deploy(Web3j web3j, Credentials credentials, GasProvider contractGasProvider, BigInteger initialVonValue) {
        String encodedConstructor = WasmFunctionEncoder.encodeConstructor(BINARY, Arrays.asList());
        return deployRemoteCall(IntegerDataTypeContract_2.class, web3j, credentials, contractGasProvider, encodedConstructor, initialVonValue);
    }

    public static RemoteCall<IntegerDataTypeContract_2> deploy(Web3j web3j, TransactionManager transactionManager, GasProvider contractGasProvider, BigInteger initialVonValue) {
        String encodedConstructor = WasmFunctionEncoder.encodeConstructor(BINARY, Arrays.asList());
        return deployRemoteCall(IntegerDataTypeContract_2.class, web3j, transactionManager, contractGasProvider, encodedConstructor, initialVonValue);
    }

    public RemoteCall<TransactionReceipt> setInt8(Int8 input) {
        final WasmFunction function = new WasmFunction(FUNC_SETINT8, Arrays.asList(input), Void.class);
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> setInt8(Int8 input, BigInteger vonValue) {
        final WasmFunction function = new WasmFunction(FUNC_SETINT8, Arrays.asList(input), Void.class);
        return executeRemoteCallTransaction(function, vonValue);
    }

    public RemoteCall<Int8> getInt8() {
        final WasmFunction function = new WasmFunction(FUNC_GETINT8, Arrays.asList(), Int8.class);
        return executeRemoteCall(function, Int8.class);
    }

    public RemoteCall<TransactionReceipt> setInt32(Int32 input) {
        final WasmFunction function = new WasmFunction(FUNC_SETINT32, Arrays.asList(input), Void.class);
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> setInt32(Int32 input, BigInteger vonValue) {
        final WasmFunction function = new WasmFunction(FUNC_SETINT32, Arrays.asList(input), Void.class);
        return executeRemoteCallTransaction(function, vonValue);
    }

    public RemoteCall<Int32> getInt32() {
        final WasmFunction function = new WasmFunction(FUNC_GETINT32, Arrays.asList(), Int32.class);
        return executeRemoteCall(function, Int32.class);
    }

    public RemoteCall<TransactionReceipt> setInt64(Int64 input) {
        final WasmFunction function = new WasmFunction(FUNC_SETINT64, Arrays.asList(input), Void.class);
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> setInt64(Int64 input, BigInteger vonValue) {
        final WasmFunction function = new WasmFunction(FUNC_SETINT64, Arrays.asList(input), Void.class);
        return executeRemoteCallTransaction(function, vonValue);
    }

    public RemoteCall<Int64> getInt64() {
        final WasmFunction function = new WasmFunction(FUNC_GETINT64, Arrays.asList(), Int64.class);
        return executeRemoteCall(function, Int64.class);
    }

    public RemoteCall<TransactionReceipt> setUint8(Uint8 input) {
        final WasmFunction function = new WasmFunction(FUNC_SETUINT8, Arrays.asList(input), Void.class);
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> setUint8(Uint8 input, BigInteger vonValue) {
        final WasmFunction function = new WasmFunction(FUNC_SETUINT8, Arrays.asList(input), Void.class);
        return executeRemoteCallTransaction(function, vonValue);
    }

    public RemoteCall<Uint8> getUint8() {
        final WasmFunction function = new WasmFunction(FUNC_GETUINT8, Arrays.asList(), Uint8.class);
        return executeRemoteCall(function, Uint8.class);
    }

    public RemoteCall<TransactionReceipt> setUint32(Uint32 input) {
        final WasmFunction function = new WasmFunction(FUNC_SETUINT32, Arrays.asList(input), Void.class);
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> setUint32(Uint32 input, BigInteger vonValue) {
        final WasmFunction function = new WasmFunction(FUNC_SETUINT32, Arrays.asList(input), Void.class);
        return executeRemoteCallTransaction(function, vonValue);
    }

    public RemoteCall<Uint32> getUint32() {
        final WasmFunction function = new WasmFunction(FUNC_GETUINT32, Arrays.asList(), Uint32.class);
        return executeRemoteCall(function, Uint32.class);
    }

    public RemoteCall<TransactionReceipt> setUint64(Uint64 input) {
        final WasmFunction function = new WasmFunction(FUNC_SETUINT64, Arrays.asList(input), Void.class);
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> setUint64(Uint64 input, BigInteger vonValue) {
        final WasmFunction function = new WasmFunction(FUNC_SETUINT64, Arrays.asList(input), Void.class);
        return executeRemoteCallTransaction(function, vonValue);
    }

    public RemoteCall<Uint64> getUint64() {
        final WasmFunction function = new WasmFunction(FUNC_GETUINT64, Arrays.asList(), Uint64.class);
        return executeRemoteCall(function, Uint64.class);
    }

    public static IntegerDataTypeContract_2 load(String contractAddress, Web3j web3j, Credentials credentials, GasProvider contractGasProvider) {
        return new IntegerDataTypeContract_2(contractAddress, web3j, credentials, contractGasProvider);
    }

    public static IntegerDataTypeContract_2 load(String contractAddress, Web3j web3j, TransactionManager transactionManager, GasProvider contractGasProvider) {
        return new IntegerDataTypeContract_2(contractAddress, web3j, transactionManager, contractGasProvider);
    }
}
