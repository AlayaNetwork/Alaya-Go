package network.platon.contracts.wasm;

import com.platon.rlp.datatypes.Uint32;
import java.math.BigInteger;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.web3j.abi.WasmEventEncoder;
import org.web3j.abi.WasmFunctionEncoder;
import org.web3j.abi.datatypes.WasmEvent;
import org.web3j.abi.datatypes.WasmEventParameter;
import org.web3j.abi.datatypes.WasmFunction;
import org.web3j.crypto.Credentials;
import org.web3j.protocol.Web3j;
import org.web3j.protocol.core.DefaultBlockParameter;
import org.web3j.protocol.core.RemoteCall;
import org.web3j.protocol.core.methods.request.PlatonFilter;
import org.web3j.protocol.core.methods.response.Log;
import org.web3j.protocol.core.methods.response.TransactionReceipt;
import org.web3j.tx.TransactionManager;
import org.web3j.tx.WasmContract;
import org.web3j.tx.gas.GasProvider;
import rx.Observable;
import rx.functions.Func1;

/**
 * <p>Auto generated code.
 * <p><strong>Do not modify!</strong>
 * <p>Please use the <a href="https://github.com/PlatONnetwork/client-sdk-java/releases">platon-web3j command line tools</a>,
 * or the org.web3j.codegen.WasmFunctionWrapperGenerator in the 
 * <a href="https://github.com/PlatONnetwork/client-sdk-java/tree/master/codegen">codegen module</a> to update.
 *
 * <p>Generated with platon-web3j version 0.9.1.2-SNAPSHOT.
 */
public class ContractEmitEvent2 extends WasmContract {
    private static String BINARY_0 = "";

    public static String BINARY = BINARY_0;

    public static final String FUNC_TWO_EMIT_EVENT2 = "two_emit_event2";

    public static final String FUNC_TWO_EMIT_EVENT2_ARGS4 = "two_emit_event2_args4";

    public static final String FUNC_GET_STRING = "get_string";

    public static final WasmEvent TRANSFER_EVENT = new WasmEvent("transfer", Arrays.asList(new WasmEventParameter(String.class, true) , new WasmEventParameter(String.class, true)), Arrays.asList(new WasmEventParameter(Uint32.class)));
    ;

    public static final WasmEvent TRANSFER2_EVENT = new WasmEvent("transfer2", Arrays.asList(new WasmEventParameter(String.class, true) , new WasmEventParameter(String.class, true)), Arrays.asList(new WasmEventParameter(Uint32.class) , new WasmEventParameter(Uint32.class) , new WasmEventParameter(String.class) , new WasmEventParameter(String.class)));
    ;

    protected ContractEmitEvent2(String contractAddress, Web3j web3j, Credentials credentials, GasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, credentials, contractGasProvider);
    }

    protected ContractEmitEvent2(String contractAddress, Web3j web3j, TransactionManager transactionManager, GasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public List<TransferEventResponse> getTransferEvents(TransactionReceipt transactionReceipt) {
        List<WasmContract.WasmEventValuesWithLog> valueList = extractEventParametersWithLog(TRANSFER_EVENT, transactionReceipt);
        ArrayList<TransferEventResponse> responses = new ArrayList<TransferEventResponse>(valueList.size());
        for (WasmContract.WasmEventValuesWithLog eventValues : valueList) {
            TransferEventResponse typedResponse = new TransferEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.topic1 = (String) eventValues.getIndexedValues().get(0);
            typedResponse.topic2 = (String) eventValues.getIndexedValues().get(1);
            typedResponse.arg1 = (Uint32) eventValues.getNonIndexedValues().get(0);
            responses.add(typedResponse);
        }
        return responses;
    }

    public Observable<TransferEventResponse> transferEventObservable(PlatonFilter filter) {
        return web3j.platonLogObservable(filter).map(new Func1<Log, TransferEventResponse>() {
            @Override
            public TransferEventResponse call(Log log) {
                WasmContract.WasmEventValuesWithLog eventValues = extractEventParametersWithLog(TRANSFER_EVENT, log);
                TransferEventResponse typedResponse = new TransferEventResponse();
                typedResponse.log = log;
                typedResponse.topic1 = (String) eventValues.getIndexedValues().get(0);
                typedResponse.topic2 = (String) eventValues.getIndexedValues().get(1);
                typedResponse.arg1 = (Uint32) eventValues.getNonIndexedValues().get(0);
                return typedResponse;
            }
        });
    }

    public Observable<TransferEventResponse> transferEventObservable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        PlatonFilter filter = new PlatonFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(WasmEventEncoder.encode(TRANSFER_EVENT));
        return transferEventObservable(filter);
    }

    public RemoteCall<TransactionReceipt> two_emit_event2(String name, String nationality, Uint32 value) {
        final WasmFunction function = new WasmFunction(FUNC_TWO_EMIT_EVENT2, Arrays.asList(name,nationality,value), Void.class);
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> two_emit_event2(String name, String nationality, Uint32 value, BigInteger vonValue) {
        final WasmFunction function = new WasmFunction(FUNC_TWO_EMIT_EVENT2, Arrays.asList(name,nationality,value), Void.class);
        return executeRemoteCallTransaction(function, vonValue);
    }

    public List<Transfer2EventResponse> getTransfer2Events(TransactionReceipt transactionReceipt) {
        List<WasmContract.WasmEventValuesWithLog> valueList = extractEventParametersWithLog(TRANSFER2_EVENT, transactionReceipt);
        ArrayList<Transfer2EventResponse> responses = new ArrayList<Transfer2EventResponse>(valueList.size());
        for (WasmContract.WasmEventValuesWithLog eventValues : valueList) {
            Transfer2EventResponse typedResponse = new Transfer2EventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.topic1 = (String) eventValues.getIndexedValues().get(0);
            typedResponse.topic2 = (String) eventValues.getIndexedValues().get(1);
            typedResponse.arg1 = (Uint32) eventValues.getNonIndexedValues().get(0);
            typedResponse.arg2 = (Uint32) eventValues.getNonIndexedValues().get(1);
            typedResponse.arg3 = (String) eventValues.getNonIndexedValues().get(2);
            typedResponse.arg4 = (String) eventValues.getNonIndexedValues().get(3);
            responses.add(typedResponse);
        }
        return responses;
    }

    public Observable<Transfer2EventResponse> transfer2EventObservable(PlatonFilter filter) {
        return web3j.platonLogObservable(filter).map(new Func1<Log, Transfer2EventResponse>() {
            @Override
            public Transfer2EventResponse call(Log log) {
                WasmContract.WasmEventValuesWithLog eventValues = extractEventParametersWithLog(TRANSFER2_EVENT, log);
                Transfer2EventResponse typedResponse = new Transfer2EventResponse();
                typedResponse.log = log;
                typedResponse.topic1 = (String) eventValues.getIndexedValues().get(0);
                typedResponse.topic2 = (String) eventValues.getIndexedValues().get(1);
                typedResponse.arg1 = (Uint32) eventValues.getNonIndexedValues().get(0);
                typedResponse.arg2 = (Uint32) eventValues.getNonIndexedValues().get(1);
                typedResponse.arg3 = (String) eventValues.getNonIndexedValues().get(2);
                typedResponse.arg4 = (String) eventValues.getNonIndexedValues().get(3);
                return typedResponse;
            }
        });
    }

    public Observable<Transfer2EventResponse> transfer2EventObservable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        PlatonFilter filter = new PlatonFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(WasmEventEncoder.encode(TRANSFER2_EVENT));
        return transfer2EventObservable(filter);
    }

    public static RemoteCall<ContractEmitEvent2> deploy(Web3j web3j, Credentials credentials, GasProvider contractGasProvider) {
        String encodedConstructor = WasmFunctionEncoder.encodeConstructor(BINARY, Arrays.asList());
        return deployRemoteCall(ContractEmitEvent2.class, web3j, credentials, contractGasProvider, encodedConstructor);
    }

    public static RemoteCall<ContractEmitEvent2> deploy(Web3j web3j, TransactionManager transactionManager, GasProvider contractGasProvider) {
        String encodedConstructor = WasmFunctionEncoder.encodeConstructor(BINARY, Arrays.asList());
        return deployRemoteCall(ContractEmitEvent2.class, web3j, transactionManager, contractGasProvider, encodedConstructor);
    }

    public static RemoteCall<ContractEmitEvent2> deploy(Web3j web3j, Credentials credentials, GasProvider contractGasProvider, BigInteger initialVonValue) {
        String encodedConstructor = WasmFunctionEncoder.encodeConstructor(BINARY, Arrays.asList());
        return deployRemoteCall(ContractEmitEvent2.class, web3j, credentials, contractGasProvider, encodedConstructor, initialVonValue);
    }

    public static RemoteCall<ContractEmitEvent2> deploy(Web3j web3j, TransactionManager transactionManager, GasProvider contractGasProvider, BigInteger initialVonValue) {
        String encodedConstructor = WasmFunctionEncoder.encodeConstructor(BINARY, Arrays.asList());
        return deployRemoteCall(ContractEmitEvent2.class, web3j, transactionManager, contractGasProvider, encodedConstructor, initialVonValue);
    }

    public RemoteCall<TransactionReceipt> two_emit_event2_args4(String name, String nationality, Uint32 value1, Uint32 value2, String name1, String name2) {
        final WasmFunction function = new WasmFunction(FUNC_TWO_EMIT_EVENT2_ARGS4, Arrays.asList(name,nationality,value1,value2,name1,name2), Void.class);
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> two_emit_event2_args4(String name, String nationality, Uint32 value1, Uint32 value2, String name1, String name2, BigInteger vonValue) {
        final WasmFunction function = new WasmFunction(FUNC_TWO_EMIT_EVENT2_ARGS4, Arrays.asList(name,nationality,value1,value2,name1,name2), Void.class);
        return executeRemoteCallTransaction(function, vonValue);
    }

    public RemoteCall<String> get_string() {
        final WasmFunction function = new WasmFunction(FUNC_GET_STRING, Arrays.asList(), String.class);
        return executeRemoteCall(function, String.class);
    }

    public static ContractEmitEvent2 load(String contractAddress, Web3j web3j, Credentials credentials, GasProvider contractGasProvider) {
        return new ContractEmitEvent2(contractAddress, web3j, credentials, contractGasProvider);
    }

    public static ContractEmitEvent2 load(String contractAddress, Web3j web3j, TransactionManager transactionManager, GasProvider contractGasProvider) {
        return new ContractEmitEvent2(contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public static class TransferEventResponse {
        public Log log;

        public String topic1;

        public String topic2;

        public Uint32 arg1;
    }

    public static class Transfer2EventResponse {
        public Log log;

        public String topic1;

        public String topic2;

        public Uint32 arg1;

        public Uint32 arg2;

        public String arg3;

        public String arg4;
    }
}
