package network.platon.contracts;

import java.math.BigInteger;
import java.util.Arrays;
import java.util.Collections;
import org.web3j.abi.TypeReference;
import org.web3j.abi.datatypes.Function;
import org.web3j.abi.datatypes.Type;
import org.web3j.abi.datatypes.Utf8String;
import org.web3j.abi.datatypes.generated.Uint256;
import org.web3j.crypto.Credentials;
import org.web3j.protocol.Web3j;
import org.web3j.protocol.core.RemoteCall;
import org.web3j.protocol.core.methods.response.TransactionReceipt;
import org.web3j.tx.Contract;
import org.web3j.tx.TransactionManager;
import org.web3j.tx.gas.GasProvider;

/**
 * <p>Auto generated code.
 * <p><strong>Do not modify!</strong>
 * <p>Please use the <a href="https://docs.web3j.io/command_line.html">web3j command line tools</a>,
 * or the org.web3j.codegen.SolidityFunctionWrapperGenerator in the 
 * <a href="https://github.com/web3j/web3j/tree/master/codegen">codegen module</a> to update.
 *
 * <p>Generated with web3j version 0.7.5.0.
 */
public class OwnerNamed extends Contract {
    private static final String BINARY = "";

    public static final String FUNC_REGISTER = "register";

    public static final String FUNC_GETERRNO = "getErrno";

    public static final String FUNC_LOG = "log";

    public static final String FUNC_CHANGEMODULEREGISTEROWNER = "changeModuleRegisterOwner";

    public static final String FUNC_KILL = "kill";

    public static final String FUNC_GETSENDER = "getSender";

    public static final String FUNC_CHANGECONTRACTREGISTEROWNER = "changeContractRegisterOwner";

    public static final String FUNC_WRITEDB = "writedb";

    public static final String FUNC_GETOWNER = "getOwner";

    @Deprecated
    protected OwnerNamed(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    protected OwnerNamed(String contractAddress, Web3j web3j, Credentials credentials, GasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, credentials, contractGasProvider);
    }

    @Deprecated
    protected OwnerNamed(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    protected OwnerNamed(String contractAddress, Web3j web3j, TransactionManager transactionManager, GasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public RemoteCall<TransactionReceipt> register(String _moduleName, String _moduleVersion, String _contractName, String _contractVersion) {
        final Function function = new Function(
                FUNC_REGISTER, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(_moduleName), 
                new org.web3j.abi.datatypes.Utf8String(_moduleVersion), 
                new org.web3j.abi.datatypes.Utf8String(_contractName), 
                new org.web3j.abi.datatypes.Utf8String(_contractVersion)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<BigInteger> getErrno() {
        final Function function = new Function(FUNC_GETERRNO, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteCall<BigInteger> log(String _str, String _str2, String _str3) {
        final Function function = new Function(FUNC_LOG, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(_str), 
                new org.web3j.abi.datatypes.Utf8String(_str2), 
                new org.web3j.abi.datatypes.Utf8String(_str3)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteCall<BigInteger> log(String _str, String _addr) {
        final Function function = new Function(FUNC_LOG, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(_str), 
                new org.web3j.abi.datatypes.Address(_addr)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteCall<BigInteger> log(String _str, BigInteger _i) {
        final Function function = new Function(FUNC_LOG, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(_str), 
                new org.web3j.abi.datatypes.generated.Int256(_i)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteCall<TransactionReceipt> changeModuleRegisterOwner(String _moduleName, String _moduleVersion, String _newOwner) {
        final Function function = new Function(
                FUNC_CHANGEMODULEREGISTEROWNER, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(_moduleName), 
                new org.web3j.abi.datatypes.Utf8String(_moduleVersion), 
                new org.web3j.abi.datatypes.Address(_newOwner)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> register(String _moduleName, String _moduleVersion) {
        final Function function = new Function(
                FUNC_REGISTER, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(_moduleName), 
                new org.web3j.abi.datatypes.Utf8String(_moduleVersion)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<BigInteger> log(String _str) {
        final Function function = new Function(FUNC_LOG, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(_str)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteCall<TransactionReceipt> kill() {
        final Function function = new Function(
                FUNC_KILL, 
                Arrays.<Type>asList(), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<BigInteger> log(String _str, String _str2) {
        final Function function = new Function(FUNC_LOG, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(_str), 
                new org.web3j.abi.datatypes.Utf8String(_str2)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteCall<String> getSender() {
        final Function function = new Function(FUNC_GETSENDER, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteCall<TransactionReceipt> changeContractRegisterOwner(String _moduleName, String _moduleVersion, String _contractName, String _contractVersion, String _newOwner) {
        final Function function = new Function(
                FUNC_CHANGECONTRACTREGISTEROWNER, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(_moduleName), 
                new org.web3j.abi.datatypes.Utf8String(_moduleVersion), 
                new org.web3j.abi.datatypes.Utf8String(_contractName), 
                new org.web3j.abi.datatypes.Utf8String(_contractVersion), 
                new org.web3j.abi.datatypes.Address(_newOwner)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<BigInteger> writedb(String _name, String _key, String _value) {
        final Function function = new Function(FUNC_WRITEDB, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(_name), 
                new org.web3j.abi.datatypes.Utf8String(_key), 
                new org.web3j.abi.datatypes.Utf8String(_value)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteCall<String> getOwner() {
        final Function function = new Function(FUNC_GETOWNER, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteCall<BigInteger> log(String _str, BigInteger _ui) {
        final Function function = new Function(FUNC_LOG, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(_str), 
                new org.web3j.abi.datatypes.generated.Uint256(_ui)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public static RemoteCall<OwnerNamed> deploy(Web3j web3j, Credentials credentials, GasProvider contractGasProvider) {
        return deployRemoteCall(OwnerNamed.class, web3j, credentials, contractGasProvider, BINARY, "");
    }

    public static RemoteCall<OwnerNamed> deploy(Web3j web3j, TransactionManager transactionManager, GasProvider contractGasProvider) {
        return deployRemoteCall(OwnerNamed.class, web3j, transactionManager, contractGasProvider, BINARY, "");
    }

    @Deprecated
    public static RemoteCall<OwnerNamed> deploy(Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        return deployRemoteCall(OwnerNamed.class, web3j, credentials, gasPrice, gasLimit, BINARY, "");
    }

    @Deprecated
    public static RemoteCall<OwnerNamed> deploy(Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        return deployRemoteCall(OwnerNamed.class, web3j, transactionManager, gasPrice, gasLimit, BINARY, "");
    }

    @Deprecated
    public static OwnerNamed load(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        return new OwnerNamed(contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    @Deprecated
    public static OwnerNamed load(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        return new OwnerNamed(contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    public static OwnerNamed load(String contractAddress, Web3j web3j, Credentials credentials, GasProvider contractGasProvider) {
        return new OwnerNamed(contractAddress, web3j, credentials, contractGasProvider);
    }

    public static OwnerNamed load(String contractAddress, Web3j web3j, TransactionManager transactionManager, GasProvider contractGasProvider) {
        return new OwnerNamed(contractAddress, web3j, transactionManager, contractGasProvider);
    }
}
