package network.platon.contracts.wasm;

import com.platon.rlp.datatypes.Int32;
import java.math.BigInteger;
import java.util.Arrays;
import org.web3j.abi.WasmFunctionEncoder;
import org.web3j.abi.datatypes.WasmFunction;
import org.web3j.crypto.Credentials;
import org.web3j.protocol.Web3j;
import org.web3j.protocol.core.RemoteCall;
import org.web3j.tx.TransactionManager;
import org.web3j.tx.WasmContract;
import org.web3j.tx.gas.GasProvider;

/**
 * <p>Auto generated code.
 * <p><strong>Do not modify!</strong>
 * <p>Please use the <a href="https://github.com/PlatONnetwork/client-sdk-java/releases">platon-web3j command line tools</a>,
 * or the org.web3j.codegen.WasmFunctionWrapperGenerator in the 
 * <a href="https://github.com/PlatONnetwork/client-sdk-java/tree/master/codegen">codegen module</a> to update.
 *
 * <p>Generated with platon-web3j version 0.13.0.6.
 */
public class MemoryCallocInt extends WasmContract {
    private static String BINARY_0 = "0x0061736d0100000001360a60000060017f0060027f7f0060017f017f60037f7f7f006000017f60027f7f017f60037f7f7f017f60047f7f7f7f017f60017f017e025d0403656e760c706c61746f6e5f70616e6963000003656e7617706c61746f6e5f6765745f696e7075745f6c656e677468000503656e7610706c61746f6e5f6765745f696e707574000103656e760d706c61746f6e5f72657475726e00020319180000010100060003080203010309020102040007020000030405017001030305030100020608017f0141d08a040b073904066d656d6f72790200115f5f7761736d5f63616c6c5f63746f727300040f5f5f66756e63735f6f6e5f65786974001606696e766f6b65000a0908010041010b0206060ab32418080010051019101a0b3801017f41900842003702004198084100360200417421000340200004402000419c086a4100360200200041046a21000c010b0b410110070b0300010b920101027f419c08410136020041a008280200220145044041a00841a80836020041a80821010b024041a40828020022024120460440418402410110092201450d01200141a00828020036020041a008200136020041a4084100360200410021020b41a408200241016a360200200120024102746a22014184016a4100360200200141046a20003602000b419c0841003602000b3100410541041009410a360200410a41141009413236020041144128100941c801360200413241c801100941c4133602000b1800200020016c2201100b220004402000200110180b20000ba00802077f017e230041406a22012400100410012202100b220010020240200141086a20002002411c100c2204280208450440200441146a2802002103200428021021020c010b200141206a2004100d2004200141286a200128022020012802244114100c100e36020c200141286a2004100d2004027f410020012802282200450d001a4100200128022c2206200428020c2205490d001a200620052005417f461b210320000b2202360210200441146a2003360200200441003602080b200141286a200220034114100c2200100f024002402000280204450d002000100f0240200028020022022c0000220341004e044020030d010c020b200341807f460d00200341ff0171220441b7014d0440200028020441014d04401000200028020021020b20022d00010d010c020b200441bf014b0d012000280204200341ff017141ca7e6a22034d04401000200028020021020b200220036a2d0000450d010b2000280204450d0020022d000041c001490d010b10000b200010102205200028020422024b04401000200028020421020b20002802002106024002400240200204404100210420062c00002200417f4a0d01027f200041ff0171220441bf014d04404100200041ff017141b801490d011a200441c97e6a0c010b4100200041ff017141f801490d001a200441897e6a0b41016a21040c010b4101210420060d00410021000c010b410021002002200549200420056a20024b720d004100210320022004490d01200420066a2103200220046b20052005417f461b22004109490d0110000c010b410021030b0340200004402000417f6a210020033100002007420886842107200341016a21030c010b0b024002402007500d0041800810112007510d0141850810112007520d0010082001410036023020014200370328200141286a410010122001413c6a410036020020014200370234200128023041024d0440200141286a410310120b200141286a1013200141286a200128022c41026a1014200128022c20012802286a417e6a419390023b0000034002402001280238220020012802344622040d00200041786a220228020022034504401000200228020021030b20022003417f6a220336020020030d002001200236023841002103200128022c22042000417c6a28020022056b2202210003402000044020004108762100200341016a21030c010b0b200141286a4101200341016a20024138491b220020046a10142000200128022820056a22006a200020021015200241374d04402000200241406a3a00000c020b200341084d04402000200341776a3a0000200020036a210003402002450d03200020023a0000200241087621022000417f6a21000c000b000510000c020b000b0b200445044010000b2001280228200128022c100320012802342202450d01200120023602380c010b10000b1016200141406b24000b970101047f230041106b220124002001200036020c2000047f41c00a200041086a2202411076220041c00a2802006a220336020041bc0a200241bc0a28020022026a41076a417871220436020002400240200341107420044d044041c00a200341016a360200200041016a21000c010b2000450d010b200040000d0010000b20022001410c6a4104101741086a0541000b200141106a24000b730020004200370210200042ffffffff0f370208200020023602042000200136020002402003410871450d002000100e20024f0d002003410471044010000c010b200042003702000b02402003411071450d002000100e20024d0d0020034104710440100020000f0b200042003702000b20000b7101047f20011010220220012802044b044010000b2001101b21032000027f0240200128020022054504400c010b200220036a200128020422014b2001200349720d00410020012002490d011a200320056a2104200120036b20022002417f461b0c010b41000b360204200020043602000b2e01017f200028020445044041000f0b4101210120002802002c0000417f4c047f2000101b200010106a0541010b0b4101017f200028020445044010000b0240200028020022012d0000418101470d00200028020441014d047f100020002802000520010b2c00014100480d0010000b0bff0201037f200028020445044041000f0b2000100f41012102024020002802002c00002201417f4a0d00200141ff0171220341b7014d0440200341807f6a0f0b02400240200141ff0171220141bf014d0440024020002802042201200341c97e6a22024d047f100020002802040520010b4102490d0020002802002d00010d0010000b200241054f044010000b20002802002d000145044010000b4100210241b7012101034020012003460440200241384f0d030c0405200028020020016a41ca7e6a2d00002002410874722102200141016a21010c010b000b000b200141f7014d0440200341c07e6a0f0b024020002802042201200341897e6a22024d047f100020002802040520010b4102490d0020002802002d00010d0010000b200241054f044010000b20002802002d000145044010000b4100210241f701210103402001200346044020024138490d0305200028020020016a418a7e6a2d00002002410874722102200141016a21010c010b0b0b200241ff7d490d010b10000b20020b3901027e42a5c688a1c89ca7f94b210103402000300000220250450440200041016a2100200142b383808080207e20028521010c010b0b20010b2f01017f200028020820014904402001100b200028020020002802041017210220002001360208200020023602000b0b4001027f2000280204220141016a220220002802084b047f20002002101220002802040520010b20002802006a4182013a00002000200028020441016a3602040b0f00200020011012200020013602040b8d0301037f024020002001460d00200120006b20026b410020024101746b4d044020002001200210171a0c010b20002001734103712103027f024020002001490440200020030d021a410021030340200120036a2104200020036a2205410371450440200220036b210241002103034020024104490d04200320056a200320046a280200360200200341046a21032002417c6a21020c000b000b20022003460d04200520042d00003a0000200341016a21030c000b000b024020030d002001417f6a21030340200020026a22044103714504402001417c6a21032000417c6a2104034020024104490d03200220046a200220036a2802003602002002417c6a21020c000b000b2002450d042004417f6a200220036a2d00003a00002002417f6a21020c000b000b2001417f6a210103402002450d03200020026a417f6a200120026a2d00003a00002002417f6a21020c000b000b200320046a2101200320056a0b210303402002450d01200320012d00003a00002002417f6a2102200341016a2103200141016a21010c000b000b0b880101037f419c08410136020041a0082802002100034020000440034041a40841a4082802002201417f6a22023602002001410148450440419c084100360200200020024102746a22004184016a280200200041046a280200110100419c08410136020041a00828020021000c010b0b41a408412036020041a008200028020022003602000c010b0b0bf80801067f0340200020046a2105200120046a220341037145200220044672450440200520032d00003a0000200441016a21040c010b0b200220046b210602402005410371220845044003402006411049450440200020046a2202200120046a2203290200370200200241086a200341086a290200370200200441106a2104200641706a21060c010b0b027f2006410871450440200120046a2103200020046a0c010b200020046a2202200120046a2201290200370200200141086a2103200241086a0b21042006410471044020042003280200360200200341046a2103200441046a21040b20064102710440200420032f00003b0000200341026a2103200441026a21040b2006410171450d01200420032d00003a000020000f0b024020064120490d002008417f6a220841024b0d00024002400240024002400240200841016b0e020102000b2005200120046a220628020022033a0000200541016a200641016a2f00003b0000200041036a2108200220046b417d6a2106034020064111490d03200420086a2202200120046a220541046a2802002207410874200341187672360200200241046a200541086a2802002203410874200741187672360200200241086a2005410c6a28020022074108742003411876723602002002410c6a200541106a2802002203410874200741187672360200200441106a2104200641706a21060c000b000b2005200120046a220628020022033a0000200541016a200641016a2d00003a0000200041026a2108200220046b417e6a2106034020064112490d03200420086a2202200120046a220541046a2802002207411074200341107672360200200241046a200541086a2802002203411074200741107672360200200241086a2005410c6a28020022074110742003411076723602002002410c6a200541106a2802002203411074200741107672360200200441106a2104200641706a21060c000b000b2005200120046a28020022033a0000200041016a21082004417f7320026a2106034020064113490d03200420086a2202200120046a220541046a2802002207411874200341087672360200200241046a200541086a2802002203411874200741087672360200200241086a2005410c6a28020022074118742003410876723602002002410c6a200541106a2802002203411874200741087672360200200441106a2104200641706a21060c000b000b200120046a41036a2103200020046a41036a21050c020b200120046a41026a2103200020046a41026a21050c010b200120046a41016a2103200020046a41016a21050b20064110710440200520032d00003a00002005200328000136000120052003290005370005200520032f000d3b000d200520032d000f3a000f200541106a2105200341106a21030b2006410871044020052003290000370000200541086a2105200341086a21030b2006410471044020052003280000360000200541046a2105200341046a21030b20064102710440200520032f00003b0000200541026a2105200341026a21030b2006410171450d00200520032d00003a00000b20000bdf0201017f02402001450d00200041003a0000200020016a2202417f6a41003a000020014103490d00200041003a0002200041003a00012002417d6a41003a00002002417e6a41003a000020014107490d00200041003a00032002417c6a41003a000020014109490d002000410020006b41037122026a220041003602002000200120026b417c7122026a2201417c6a410036020020024109490d002000410036020820004100360204200141786a4100360200200141746a410036020020024119490d002000410036021820004100360214200041003602102000410036020c200141706a41003602002001416c6a4100360200200141686a4100360200200141646a41003602002002200041047141187222026b2101200020026a2100034020014120490d0120004200370300200041186a4200370300200041106a4200370300200041086a4200370300200041206a2100200141606a21010c000b000b0b3501017f230041106b220041d08a0436020c41b80a200028020c41076a417871220036020041bc0a200036020041c00a3f003602000b3801017f41ac0a420037020041b40a410036020041742100034020000440200041b80a6a4100360200200041046a21000c010b0b410210070b5b00027f027f41002000280204450d001a410020002802002c0000417f4a0d011a20002802002d0000220041bf014d04404100200041b801490d011a200041c97e6a0c010b4100200041f801490d001a200041897e6a0b41016a0b0b0b1501004180080b0e696e69740067657463616c6c6f63";

    public static String BINARY = BINARY_0;

    public static final String FUNC_GETCALLOC = "getcalloc";

    protected MemoryCallocInt(String contractAddress, Web3j web3j, Credentials credentials, GasProvider contractGasProvider, Long chainId) {
        super(BINARY, contractAddress, web3j, credentials, contractGasProvider, chainId);
    }

    protected MemoryCallocInt(String contractAddress, Web3j web3j, TransactionManager transactionManager, GasProvider contractGasProvider, Long chainId) {
        super(BINARY, contractAddress, web3j, transactionManager, contractGasProvider, chainId);
    }

    public RemoteCall<Int32> getcalloc() {
        final WasmFunction function = new WasmFunction(FUNC_GETCALLOC, Arrays.asList(), Int32.class);
        return executeRemoteCall(function, Int32.class);
    }

    public static RemoteCall<MemoryCallocInt> deploy(Web3j web3j, Credentials credentials, GasProvider contractGasProvider, Long chainId) {
        String encodedConstructor = WasmFunctionEncoder.encodeConstructor(BINARY, Arrays.asList());
        return deployRemoteCall(MemoryCallocInt.class, web3j, credentials, contractGasProvider, encodedConstructor, chainId);
    }

    public static RemoteCall<MemoryCallocInt> deploy(Web3j web3j, TransactionManager transactionManager, GasProvider contractGasProvider, Long chainId) {
        String encodedConstructor = WasmFunctionEncoder.encodeConstructor(BINARY, Arrays.asList());
        return deployRemoteCall(MemoryCallocInt.class, web3j, transactionManager, contractGasProvider, encodedConstructor, chainId);
    }

    public static RemoteCall<MemoryCallocInt> deploy(Web3j web3j, Credentials credentials, GasProvider contractGasProvider, BigInteger initialVonValue, Long chainId) {
        String encodedConstructor = WasmFunctionEncoder.encodeConstructor(BINARY, Arrays.asList());
        return deployRemoteCall(MemoryCallocInt.class, web3j, credentials, contractGasProvider, encodedConstructor, initialVonValue, chainId);
    }

    public static RemoteCall<MemoryCallocInt> deploy(Web3j web3j, TransactionManager transactionManager, GasProvider contractGasProvider, BigInteger initialVonValue, Long chainId) {
        String encodedConstructor = WasmFunctionEncoder.encodeConstructor(BINARY, Arrays.asList());
        return deployRemoteCall(MemoryCallocInt.class, web3j, transactionManager, contractGasProvider, encodedConstructor, initialVonValue, chainId);
    }

    public static MemoryCallocInt load(String contractAddress, Web3j web3j, Credentials credentials, GasProvider contractGasProvider, Long chainId) {
        return new MemoryCallocInt(contractAddress, web3j, credentials, contractGasProvider, chainId);
    }

    public static MemoryCallocInt load(String contractAddress, Web3j web3j, TransactionManager transactionManager, GasProvider contractGasProvider, Long chainId) {
        return new MemoryCallocInt(contractAddress, web3j, transactionManager, contractGasProvider, chainId);
    }
}
